<h1>分組人員</h1>
<p>group:1</p>
<p>40723213<br/>40723215<br/>40723246<br/>----<br/>group:2</p>
<p>40723240<br/>40523253<br/>40723237<br/>----<br/>group:3</p>
<p>40723247<br/>40723205<br/>40723239<br/>----<br/>group:4</p>
<p>40623251<br/>40623115<br/>40623144</p>
<h1>group1</h1>
<h2>40723213</h2>
<<<<<<< HEAD
=======
<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>
>>>>>>> 36907be6ce33abb0e8a527d6e8b57a24aeaa523e
<p>test</p>
<h2>40723215</h2>
<p><span>test</span></p>
<h2>40723246</h2>
<p><span>test</span></p>
<h1>group2</h1>
<h2>40723240</h2>
<h2>40523253</h2>
<<<<<<< HEAD
<p></p>
<h2>40723237</h2>
<h1>group3</h1>
<h2>40723247</h2>
<p></p>
<h2>40723205</h2>
<p><span>test</span></p>
<h2>40723239</h2>
<p><span face="monospace"><strong>Ubuntu設定及API連線</strong></span></p>
<p><span face="monospace">操作步驟:<br/>1.下載<a href="https://www.virtualbox.org/wiki/Downloads">vitualbox</a>、<a href="https://drive.google.com/open?id=143jFMheM1xjLxhLkSAouThLzj3WUYX6_">ubuntu</a>、<a href="https://drive.google.com/open?id=1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl">CoppeliaSim</a>四輪車控制器檔案。<br/>2.開啟vitualbox，匯入ubuntu。<br/>3.設定虛擬主機的網路埠號。[NET:設定-&gt;網路-&gt;附加到(A)改成NAT-&gt;進階-&gt;連接埠轉送-&gt;設定三個埠號(22、8443、19999)]。<br/>4.設定完成後啟動ubuntu。<br/>5.輸入密碼kmol2020，並開啟lxterminal。<br/>6.輸入xterm&amp;開啟，並使用ctrl+右鍵將視窗放大。<br/>7.依照步驟打開coppeliasim，輸入ls查看內容。<br/>8.cd coppeliasim4_rev4接著輸入</span><span face="monospace">ls再來輸入</span><span face="monospace">cd  CoppeliaSim_Edu_V4_0_0_Ubuntu18_04輸入ls最後輸入./coppeliaSim.sh。<br/>9.開啟後打開檔案sdc.ttt。<br/>10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。<br/>11.將檔案中的car_model.py放入編譯器中，並執行。<br/>12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。</span><span face="monospace"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8JmZOFvViWk" width="560"></iframe></span></p>
<p><strong>week10  google用戶登陸</strong></p>
<p><span>登錄到您的@gm帳戶</span><br/><span>鏈接到<a href="https://console.developers.google.com/">https://console.developers.google.com</a></span><br/><span>接受許可並創建Google API項目</span><br/><span>啟用Google +域API</span><br/><span>在Google + Domain API憑據下，按CONFIGURE CONSENT SCREEN按鈕</span><br/><span>選擇內部或外部用戶類型並添加新的應用程序名稱</span><br/><span>在“ API和服務”下，進入“憑據”頁面</span><br/><span>為Web應用程序創建“ OAuth 2.0客戶端ID”類型的憑據</span><br/><span>授權的JavaScript來源：https：// localhost：8443</span><br/><span>授權的重定向URI：https：// localhost：8443 / login / google /</span><br/><span>將您的客戶ID和客戶機密保存到oauth_gm.txt中</span></p>
<p><span><span lang="zh-TW">開啟leo更改config中的scrum為加上學號的txt檔案名稱，</span><span lang="zh-TW">並且修改完成之後按下save和darwROC<br/>pip install authomatic<br/>開啟https://localhost:8443<br/>測試是否可以運作</span></span><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/IYOVwKY_Rzg" width="560"></iframe></span></p>
<h3>Assignment1</h3>
<p><span>作業一:<br/><br/></span><span>1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？</span><br/><br/><span>2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？</span><br/><br/><span>3.您需要從</span><a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a><span>了解什麼來實現四輪機器人？</span></p>
<p>Random grouping 亂數分組程式</p>
<p>描述如何針對該課程進行有效隨機分組，或隨機點名<span>?</span></p>
<p>要進行隨機分組及隨機點名，必須先了解程式裡導入的模組及在模組中所用的<br/>語法、迴圈<span>:</span>request、ast.literal_eval、random、for迴圈</p>
<ul>
<li>request模組<span>:</span>此模組是為了可以使用<span><span> </span>Python<span> </span></span>來下載網頁上的資料，是以request模組建立適當的<span><span> </span>HTTP<span> </span></span>請求，透過<span><span> </span>HTTP<span> </span></span>請求從網頁伺服器下載指定的資料，分為兩種模式<span>Post</span>、<span>Get</span>。<br/>參考文獻<span>: </span><span><a href="https://ithelp.ithome.com.tw/articles/10206215">https://ithelp.ithome.com.tw/articles/10206215</a></span></li>
<li>ast模組<span>:<span> </span></span>此模組是<span>python</span>原始碼到位元組碼的一種中間產物，其中的語法literal_eval是為了能夠安全地評估表達式節點或包含<span>Python</span>文字或容器顯示的字符串。提供的字符串或節點只能由以下<span>Python</span>文字結構組成：字符串、字節、數字、元組、列表、字典、集合、布林值、<span>None</span>。<br/>參考文獻<span>: </span><span><a href="https://docs.python.org/3/library/ast.html">https://docs.python.org/3/library/ast.html</a></span><br/><span><a href="https://www.itread01.com/content/1544847254.html">https://www.itread01.com/content/1544847254.html</a></span></li>
<li>random模組<span>:</span>此模組用於生成偽隨機數，且有許多種用法，例如<span>:</span>隨機選取choice、隨機選取sample (一次選多筆資料<span>)</span>、隨機調換順序 shuffle (就地調換順序<span>)</span>、隨機取得亂數<span> </span>random (0~1之間的隨機亂數<span>)</span>、隨機取得亂數<span> </span>uniform (可以指定範圍<span>)</span>。<br/>參考文獻<span>: </span><span><a href="https://ithelp.ithome.com.tw/articles/10207483">https://ithelp.ithome.com.tw/articles/10207483<br/></a></span>(4) for迴圈<span>:<span> </span></span>在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴圈<span><span> </span>(loop)<span> </span></span>的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行，是程式設計中很重要的一種控制結構，且分為兩類<span>:</span>for、while</li>
</ul>
<p>○ for迴圈基本語法<span>:</span>for 變數<span> </span>in list、字串、range<br/>○ while迴圈基本語法<span>:</span>while 布林值<span><br/></span> for迴圈及while迴圈比較<span>:</span> for迴圈比較適用在已知迴圈數的問題，而<span><br/></span>while迴圈則適用在「無法預知迴圈數」的問題上。<span><br/></span>參考文獻<span>:</span><a href="https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6"> https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6</a><br/> 總結<span>:</span>在隨機分組及抽點的程式中，利用<span>request</span>模組中的<span>request.get(link)<br/></span>語法將網址中的學員學號資料擷取下來，接著利用<span>ast</span>模組中的<span>ast.literal_eval</span>語法將資料原始碼進行分析並轉換，再來利用<span>random</span>中的<span>random.suffle</span>語法及<span>for</span>迴圈將學員學號打亂並進行分組或抽點。在隨機分組及抽點的程式碼，要更加有效的執行隨機分組及點名，要先了解其中的模組及語法，然而從中進行修改。</p>
<p>Four wheel car 四輪車</p>
<p>您需要從<a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a>了解什麼來實現四輪機器人？</p>
<p><strong>部分內容翻譯概述:</strong><br/><strong><a href="https://www.coppeliarobotics.com/helpFiles/en/simulation.htm">Simulation</a></strong></p>
<p>        透過這一章可以清楚的知道關於模擬的一些運作細節及流程，介紹了仿真循環、仿真速度，盡可能達到與實際操作的時間相同，通過嘗試使仿真時間與實時保持同步來支持實時仿真，由於計算機能力有限無法進行仿真，但我們可以使用調整模擬速度的功能，總之要完成四輪車模擬必須熟悉模擬系統。</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/en/simulationPropertiesDialog.htm">Simulation settings dialog</a><strong>:</strong><br/>  在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因硬體的效能不足而造成模擬之屏幕刷新率太慢。<br/><strong><a href="https://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm">BubbleRob tutorial</a>:</strong><br/>  此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。</p>
<p><strong><a href="https://www.coppeliarobotics.com/helpFiles/en/lineFollowingBubbleRobTutorial.htm">Line following BubbleRob tutorial</a>:</strong><br/> 在此教程中，旨在擴展BubbleRob的功能，以使BubbleRob遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。<br/><strong><a href="https://www.coppeliarobotics.com/helpFiles/en/externalControllerTutorial.htm">External controller tutorial</a>:</strong><br/>  此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人）:第四種方法是通過ROS節點，ROS與遠程API相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（BØ）節點，與ROS類似，BlueZero是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。</p>
<p><strong>總結:</strong><br/>  最後要完成四輪機器人必須了解模擬程式的操作，包含模型的設置及各模型組合、各模型的物理特性設置、感測器設置、視覺感測器設置、外部控制器的選擇及設置、路徑程式碼設置，還有模擬時會發生的狀況處理，須達到這些基本的設置才能完成四輪機器人的設計。</p>
<h4>Portable system</h4>
<p>1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data下新增資料夾py382及wscite432、portablegit。<br/>2.進入<a href="https://www.python.org/">Python</a>官網。<br/>3.點選Downloads下的<a href="https://www.python.org/downloads/windows/">Windows</a>，並點選<a href="https://www.python.org/downloads/release/python-382/">Latest Python 3 Release - Python 3.8.2</a>。</p>
<p>4.找到<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a>並下載。</p>
<p>5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382</p>
<p>6.下載SciTE系統 <a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a>，下載完後解壓縮至data下的wscite432。</p>
<p>7.建立新的start.bat及stop.bat。</p>
<p>8.下載MSYS2 <a href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a> 至data下。<br/>9.下載PortableGit <a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a> 至 portablegit下。<br/>10.安裝pip，到<a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a>頁面，另存新檔到data下。<br/>11.執行指令，將python3.8.2版本缺少的模組下載下來。</p>
<p><strong>start.bat:</strong><span></span></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_317653">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@echo</code> <code class="py plain">off</code></div>
<div class="line number2 index1 alt1"><code class="py functions">set</code> <code class="py plain">Disk</code><code class="py keyword">=</code><code class="py plain">y</code></div>
<div class="line number3 index2 alt2"><code class="py plain">subst </code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">: </code><code class="py string">"data"</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:</code></div>
<div class="line number6 index5 alt1"><code class="py spaces"> </code> </div>
<div class="line number7 index6 alt2"><code class="py functions">set</code> <code class="py plain">HomePath</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number8 index7 alt1"><code class="py functions">set</code> <code class="py plain">HomeDrive</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number9 index8 alt2"><code class="py functions">set</code> <code class="py plain">Home</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number10 index9 alt1"><code class="py functions">set</code> <code class="py plain">USERPROFILE</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\home</code></div>
<div class="line number11 index10 alt2"><code class="py spaces"> </code> </div>
<div class="line number12 index11 alt1"><code class="py plain">REM 將系統 Python 程式的 io 設為 utf</code><code class="py keyword">-</code><code class="py value">8</code></div>
<div class="line number13 index12 alt2"><code class="py functions">set</code> <code class="py plain">PYTHONIOENCODING</code><code class="py keyword">=</code><code class="py string">"utf-8"</code></div>
<div class="line number14 index13 alt1"><code class="py spaces"> </code> </div>
<div class="line number15 index14 alt2"><code class="py comments">#REM for putty</code></div>
<div class="line number16 index15 alt1"><code class="py comments">#Set GIT_HOME=%CDisk%:\portablegit\bin\</code></div>
<div class="line number17 index16 alt2"><code class="py comments">#Set GIT_SSH=%Disk%:\putty\plink.exe</code></div>
<div class="line number18 index17 alt1"><code class="py spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="py functions">set</code> <code class="py plain">PYTHONPATH</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\DLLs;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Lib;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Lib\site</code><code class="py keyword">-</code><code class="py plain">packages;</code></div>
<div class="line number20 index19 alt1"><code class="py functions">set</code> <code class="py plain">PYTHONHOME</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382</code></div>
<div class="line number21 index20 alt2"><code class="py spaces"> </code> </div>
<div class="line number22 index21 alt1"><code class="py functions">set</code> <code class="py plain">path_python</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382;</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\py382\Scripts;</code></div>
<div class="line number23 index22 alt2"><code class="py functions">set</code> <code class="py plain">path_msys2</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\msys64\mingw64\</code><code class="py functions">bin</code><code class="py plain">;</code></div>
<div class="line number24 index23 alt1"><code class="py functions">set</code> <code class="py plain">path_git</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\portablegit\</code><code class="py functions">bin</code><code class="py plain">;</code></div>
<div class="line number25 index24 alt2"><code class="py functions">set</code> <code class="py plain">path_tcc</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\tcc;</code></div>
<div class="line number26 index25 alt1"><code class="py spaces"> </code> </div>
<div class="line number27 index26 alt2"><code class="py plain">path</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:;</code><code class="py keyword">%</code><code class="py plain">path_python</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_msys2</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_git</code><code class="py keyword">%</code><code class="py plain">;</code><code class="py keyword">%</code><code class="py plain">path_tcc</code><code class="py keyword">%</code><code class="py plain">;</code></div>
<div class="line number28 index27 alt1"><code class="py spaces"> </code> </div>
<div class="line number29 index28 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number30 index29 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number31 index30 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number32 index31 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py plain">cmd.exe</code></div>
<div class="line number33 index32 alt2"><code class="py spaces"> </code> </div>
<div class="line number34 index33 alt1"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\wscite432\wscite\SciTE.exe</code></div>
<div class="line number35 index34 alt2"><code class="py plain">start </code><code class="py keyword">/</code><code class="py functions">MIN</code> <code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">:\wscite432\wscite\SciTE.exe</code></div>
<div class="line number36 index35 alt1"><code class="py spaces"> </code> </div>
<div class="line number37 index36 alt2"><code class="py plain">Exit</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><strong><span color="#000000"><span><span>stop.bat:</span></span></span></strong></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_370423">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py decorator">@echo</code> <code class="py plain">off</code></div>
<div class="line number2 index1 alt1"><code class="py functions">set</code> <code class="py plain">Disk</code><code class="py keyword">=</code><code class="py plain">y</code></div>
<div class="line number3 index2 alt2"><code class="py plain">path</code><code class="py keyword">=</code><code class="py keyword">%</code><code class="py plain">PATH</code><code class="py keyword">%</code><code class="py plain">;</code></div>
<div class="line number4 index3 alt1"><code class="py spaces"> </code> </div>
<div class="line number5 index4 alt2"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM python.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number6 index5 alt1"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM pythonw.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number7 index6 alt2"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM scite.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number8 index7 alt1"><code class="py spaces"> </code> </div>
<div class="line number9 index8 alt2"><code class="py plain">REM 終止虛擬硬碟與目錄的對應</code></div>
<div class="line number10 index9 alt1"><code class="py plain">subst </code><code class="py keyword">%</code><code class="py plain">Disk</code><code class="py keyword">%</code><code class="py plain">: </code><code class="py keyword">/</code><code class="py plain">D</code></div>
<div class="line number11 index10 alt2"><code class="py plain">REM 關閉 cmd 指令視窗</code></div>
<div class="line number12 index11 alt1"><code class="py plain">taskkill </code><code class="py keyword">/</code><code class="py plain">IM cmd.exe </code><code class="py keyword">/</code><code class="py plain">F</code></div>
<div class="line number13 index12 alt2"><code class="py spaces"> </code> </div>
<div class="line number14 index13 alt1"><code class="py plain">EXIT</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p> 8.<span>下載MSYS2 </span><span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a></span> 至data下。<br/>9.<span>下載<a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">PortableGit </a></span><span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable </a></span>至 <span>portablegit下。<br/></span>10<span color="#000000"><span>.安裝pip，到</span></span><span><a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a></span><span>頁面，另存新檔到data下。</span><br/>11.執行指令<span>，將python3.8.2版本缺少的模組下載下來。</span></p>
<div>
<div class="syntaxhighlighter py" id="highlighter_583434">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">python get</code><code class="py keyword">-</code><code class="py plain">pip.py</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<div></div>
<div>
<div class="syntaxhighlighter py" id="highlighter_220325">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">2</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">pip install flask bs4 lxml pelican markdown flask_cors leo</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div><h3>Assignment2</h3>
<p>1.2確定設計過程</p>
<p>1.2.1確定每個人的設計過程</p>
<p>有經驗的儘管所有轉錄數據都包含與設計過程有關的信息，它們都與其他內容混合在一起，包括情況項目的目標，目標，角色，必要的技能和知識，我們首先提出通過審查相關文獻以識別“過程要素”來建立編碼框架用於構建設計過程的文件。</p>
<p>產品開發及其活動為信息過程。收集，創建，解釋，轉換和轉移。</p>
<p>Ulrich和<span>Eppinger</span>（<span>2012</span>）將其描述為必要的信息對於注入的最終結果以轉化當前的設計問題解決下一個問題，以降低不確定性，從而產生產出，直到最終的結果就形成了。這被建模為轉換將功能規格（輸入）轉換為人工規格（輸出）</p>
<p>（<span>Takeda</span>，<span>Veerkamp</span>，＆<span>Yoshikawa</span>，<span>1990; Tomiyama</span>＆<span>Yoshikawa</span>，<span>1986</span>）。</p>
<p>Browning和<span>Ramasesh</span>（<span>2007</span>）指出，採用信息處理的觀點未能捕獲完整的信息流</p>
<p>因為對交互的了解很少。他們認為確定組織單位之間的互動，因為它們會產生依賴性</p>
<p>建立可交付流程模式的活動之間。總之，從這個角度來看，過程建模的基本元素是</p>
<p>用<span>IPO</span>（<span>InputeProcesseOutput</span>）表示形式概括為“信息流”以及組織單位（人員，團隊，公司，等等。）。</p>
<p>工程設計過程模型</p>
<p>由<span>Pahl</span>等人提出。 （<span>2007</span>年）證明了每個階段。第一階段的輸入是“任務”，結果是“規範”再次進入下一階段。這樣，繪製連接輸入和結果的連續發展階段出來。關於“任務”和“設計活動”</p>
<p>任務和評估結果。通常，評估發生在相對在很短的時間內決定“前進，重複或下降”。因此，我們命名了這些類型的活動（評估，設計審查，登門檢查，決策<span>-</span>此時，我們有兩個編碼類別：“任務”和“事件”。總而言之，我們可以使用四個編碼對設計過程進行建模</p>
<p>類別； “任務”，“事件”，“信息流”和“互動”，並且可以是用階段的連接來表示。至此，設計階段流程可以用“<span><span> </span>inputetask</span>（設計活動）<span>eevent</span>（決策）以下內容描述瞭如何對過程元素進行編碼。</p>
<p>信息流：信息流是在任務或事件時生成的發生。它總是伴隨著輸入和輸出。</p>
<p>工程的輸入<span>:</span></p>
<p>設計活動。我們對“從<span>ID</span>到<span>ED</span>的<span>3D CAD</span>數據”進行了編碼。</p>
<p>互動：發生任務或事件時，兩組經常</p>
<p>相互作用。例如，工業設計師檢查內部是否</p>
<p>工程設計師建議他們通過提供空間來修改空間</p>
<p>我們從每個轉錄的訪談數據中識別出流程要素。</p>
<p>我們盡可能用參與者自己的話語標記他們。我們用了字段註釋作為補充數據源。在這樣做的同時，我們安排按時間順序將編碼後的元素按流程圖格式連接構建部分設計過程。該方法被廣泛採用以可視化工業流程模型（<span>Vergidis</span>，<span>Tiwari</span>和<span>Majeed</span>，<span>2008</span>年）。我們也確定了設計過程中涉及的項目類型和目標</p>
<p>採訪數據。兩名研究人員執行了整個程序。一研究人員首先構建了部分設計流程，另一研究人員通過檢查採訪數據檢查了他們。結果，我們獲得了<span>45</span>部分公司使用<span>7-9</span>進行的部分設計過程（請參見表<span>2</span>）。</p>
<p><img alt="" height="81" src="https://s40723239.github.io/cd2020/images/2.png" width="473"/></p>
<p>1.2.2確定協作產品設計流程</p>
<p>下一步是將每個公司的設計流程整合到協作中</p>
<p>通過“馬賽克方法”進行設計過程。我們首先收集了部分設計</p>
<p>公司中特定項目的流程。之後，我們通過比較和合併部分過程，合併過程元素。從工業設計師那裡提取的部分過程訪談數據提供了有關工業設計活動的豐富信息，包括與工程設計師的互動行為，但信息較少純工程設計活動。工程界也是如此設計。</p>
<p>我們將公司的工業設計師的部分流程合併到了圍繞工業設計活動重建設計流程。在同一時間，我們利用工程設計師提供的信息來補充並從工程設計方面加強設計活動。我們圍繞同一工程設計活動重新構建設計流程辦法。我們最終將這兩個設計過程合併為一個協作產品設計過程。在鑲嵌方法中，結合交叉檢查的部分過程</p>
<p>有助於提高可靠性和通用性。這明顯減少了構建信息不完整的流程的可能性</p>
<p>通過抵消彼此的信息。因此，“馬賽克方法”減少了構建錯誤過程的可能性。</p>
<p>最後，我們通過合併階段元素（輸入，任務，事件和輸出）放入框中，並用相關任務將其命名（請參見圖<span>2</span>）。例如，工業設計師開始繪製各種想法根據前一階段的研究結果繪製的草圖。然後，他們選擇一個通過評估獲得一些最佳草圖。根據選擇結果，他們決定進入下一階段或重複當前階段。因此，‘理想草圖階段由“研究結果（輸入），“想法草圖（任務）”，“評估”（事件）和“最佳草圖（輸出）”。</p>
<p><img alt="" height="211" src="https://s40723239.github.io/cd2020/images/3.png" width="498"/></p>
<p>1.2.3簡化流程</p>
<p>一旦制定了每個公司的協作產品設計流程，我們對它們進行了分類，以確定其類型，目的和條件。但是，由於每個公司的流程都包含詳細的設計操作和信息，</p>
<p>直接在公司之間進行比較並不容易。從而，我們以“流程”的概念簡化了每個公司的設計流程塊以幫助其可比性，同時保持必要的特徵。</p>
<p>我們發現在一組小的連續階段中存在一種模式。那裡是完成所有連續階段的主要工作。完成後明確的新階段從另一項工作開始。我們將這些小階段定義為“流程塊”。其特點是初始輸入，內部迭代，決策，最終結果和不可逆的趨勢（圖<span>4</span>）。</p>
<p>內置的流程塊中的流程從初始輸入開始，跨小範圍運行裡面的階段。迭代或反饋可能在內部的小階段之間發生大塊。最後，他們對最終結果做出最終決定。</p>
<p>這是一個里程碑，指示該階段將跳到下一階段。</p>
<p>例如，在圖<span>3</span>中藍色方框中，該塊的主要工作是制定執行六個小階段的設計概念。當他們在渲染階段，如果渲染結果，他們可以回到構思草圖階段</p>
<p>對渲染評估事件不滿意。在最後階段，設計樣機，因為結果由高層管理人員確認，並且然後跳到“產品計劃會議”。</p>
<p>兩個流程塊之間的流程幾乎沒有機會在前一個結果進入下一個塊的輸入之後反轉。</p>
<p>跨團隊通常進行最終設計，並由每個部門的最高經理。返回上一個塊意味著它</p>
<p>無法滿足投放市場的時間表。因此，應該有一個最高管理層關於這個問題的決定。階段之間的反向迭代或反饋在實際情況中很少發生。它發生在一個塊中的各個階段之間。因此，似乎項目之間幾乎不可能放棄階段，但可能在階段之間。</p>
<p>我們通過其主要工作來命名流程塊。在命名塊時，</p>
<p>我們發現，“概念設計”一詞在工程上的用法有所不同</p>
<p>設計和工業設計。工程設計中的概念設計是關於通過開發廣泛的解決方案與產品的工作原理相關的技術概念（<span>Haik</span>＆<span>Shahin</span>，<span>2010; Kroll</span>，<span>Condoor</span>和<span>Jansson</span>，<span>2001</span>；烏爾曼，<span>2009</span>年）。但是，工業設計師在概念設計中決定產品樣式和交互的方向階段，以概念關鍵字，情緒板，想法表示草圖和用戶場景（<span>Press</span>＆<span>Cooper</span>，<span>2003; Tovey</span>＆<span>Harris</span>，<span>1999;Vredenburg</span>，<span>Isensee</span>，<span>Righi</span>和<span>Design</span>，<span>2001</span>年）。因此，我們標記了這個概念</p>
<p><img alt="" height="503" src="https://s40723239.github.io/cd2020/images/4.png" width="440"/></p>
=======
<h4>week1~5</h4>
<h4><strong><span>week1</span>:</strong></h4>
<p><span>登入自己的github帳戶，並且創建"cd2020"的個人倉儲。</span></p>
<p><span>用cmsimde建立網站</span></p>
<p><span>步驟:</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/Pc4RNz2evtk" width="560"></iframe></span></p>
<h4><span><strong><span>week2</span>:</strong></span></h4>
<p><strong>更新可攜系統下的python 3.7.3至python 3.8.2</strong></p>
<p>1.進入官網下載區 : <a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></p>
<p>2.<span>下載 </span><span>Windows x86-64 executable installer</span></p>
<p><img alt="" height="655" src="https://s40523253.github.io/cd2020/images/20200000.png" width="540"/></p>
<p>3.安裝pyehon 3.8.3 ，安裝時不勾選pip</p>
<p><img alt="" height="325" src="https://s40523253.github.io/cd2020/images/P1.png" width="530"/></p>
<p>4.安裝時到自己可攜的data 新增一個資料夾叫py383，安裝路徑選此處201906_fall\data\py383</p>
<p><img alt="" height="329" src="https://s40523253.github.io/cd2020/images/P3.png" width="530"/></p>
<p>5.<span> 用Scite.exe<span> </span></span><span>更改執行檔start_mdecourse.bat，將py373全部取代成py383</span></p>
<p><span><img alt="" height="705" src="https://s40523253.github.io/cd2020/images/P99.png" width="540"/></span></p>
<p><span>6.執行python get-pip.py和python -m pip install flask flask-cors markdown lxml bs4 pelican leo</span></p>
<h4><strong><span>week3</span>:</strong></h4>
<p>Assignment 1:</p>
<p>Due March 25, 2020 for class 2a and March 26, 2020 for class 2b.</p>
<ol>
<li>
<p>Describe how to do an efficient random grouping for this course or do the roll calling randomly?</p>
</li>
<li>
<p>Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github?</p>
</li>
<li>
<p>What do you need to know from<span> </span><a href="http://www.coppeliarobotics.com/helpFiles/index.html" rel="nofollow">http://www.coppeliarobotics.com/helpFiles/index.html</a><span> </span>to implement a four-wheeled robot?</p>
</li>
</ol>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/HXS95dlMSv8" width="560"></iframe></p>
<h5><span><strong><span color="#000000">分工內容:</span></strong></span></h5>
<p><span><span color="#000000"><strong>40523253 :</strong><span> </span>亂數分組程式<br/><strong>40623117 :</strong><span> </span>亂數分組程式<br/><strong>40623252 :</strong><span> </span>4輪車<br/><strong>40723221 (group leader) :</strong><span> </span>4輪車<br/><strong>40723222 :</strong><span> </span>4輪車<br/><strong>40723228 :</strong><span> </span>亂數分組程式<br/><strong>40723236 :</strong><span> </span>4輪車<br/><strong>40723237 :</strong><span> </span>可攜系統<br/><strong>40723240 :</strong><span> </span>4輪車<br/><strong>40723243 :</strong><span> </span>4輪車<br/><strong>40723244 :</strong><span> </span>可攜系統<br/><strong>40723249 :</strong><span> </span>可攜系統<br/><strong>40732331 :</strong><span> </span>4輪車 </span></span></p>
<p>W2直播中我分配的是亂數分組</p>
<p>將班級名單網址貼到DartPad上執行即可亂數分組</p>
<p><strong>DartPad</strong>:</p>
<p><a href="https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&amp;gh_repo=cd2020&amp;gh_path=downloads/dart_ex/even_grouping&amp;theme=dark">https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&amp;gh_repo=cd2020&amp;gh_path=downloads/dart_ex/even_grouping&amp;theme=dark</a></p>
<p><strong>設計二乙名單:</strong></p>
<p><a href="https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0780">https://s1.mde.nfu.edu.tw:7443/?semester=1082&amp;courseno=0780</a></p>
<p><span><img alt="" height="315" src="https://s40523253.github.io/cd2020/images/week3Dart.png" width="560"/></span></p>
<h3>week6~9</h3>
<h4><span><strong><span>week6</span>:</strong></span></h4>
<h5><strong><span color="#000000">week6直播紀錄 :</span></strong></h5>
<h6><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/B6zwMXl1V3Y" width="560"></iframe></h6>
<h6><span><strong><span color="#000000">分工名單 :</span></strong></span></h6>
<p><strong>topic 0 翻譯 :</strong><br/>40723237<br/>40723221<br/>40723222<br/>40723228<br/>40723243<br/>40723244<br/>40723236<br/>40623117</p>
<p><strong>topic 1 翻譯 :</strong><br/>40723221<br/>40723222<br/>40623252<br/>40523253<br/>40723249<br/>40732331<br/>40723240<br/>40723237</p>
<p>Assignment 2:</p>
<p>Due April 22, 2020 for class 2a and April 23, 2020 for class 2b.</p>
<ol>
<li>
<p>According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot.</p>
</li>
<li>
<p>What do you need to know from<span> </span><a href="https://cyberbotics.com/doc/guide/index" rel="nofollow">https://cyberbotics.com/doc/guide/index</a><span> </span>to implement a four-wheeled robot?</p>
</li>
</ol>
<p>翻譯跟Assignment 2 放在cd2020/downloads下</p>
<p><img alt="" height="304" src="https://s40523253.github.io/cd2020/images/Assignment%202%20%E7%BF%BB%E8%AD%AF.png" width="540"/></p>
<p><img alt="" height="304" src="https://s40523253.github.io/cd2020/images/Assignment%202.png" width="540"/></p>
<p><strong>week6課堂亂抽查報告 :</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/o88lNqgScX4" width="560"></iframe></strong><strong><span></span></strong></p>
<h4><strong><span>week8</span>:</strong></h4>
<h5><span><strong><span color="#000000">安裝這三個模組</span></strong></span></h5>
<p>pip install opencv-python</p>
<p>pip install imutils</p>
<p>pip install nump</p>
<p><img alt="" height="315" src="https://s40523253.github.io/cd2020/images/week8-%E5%AE%89%E8%A3%9D3%E5%80%8B%E6%A8%A1%E7%B5%84.png" width="560"/></p>
<h5><strong>week8亂數抽查會議記錄 :</strong></h5>
<p><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/K4oPmlJffQI" width="560"></iframe></p>
<p><span>將leo更新至6.2.1版本以解決舊版的bug</span></p>
<p>卸載舊版leo</p>
<p><span>pip uninstall</span></p>
<p><span>安裝6.2.1版leo</span></p>
<p>pip install leo==6.2.1</p>
<p><img alt="" height="315" src="https://s40523253.github.io/cd2020/images/%E6%9B%B4%E6%96%B0Leo6.2.1.png" width="560"/></p>
<p></p>
<h4><strong><span>week9</span>:</strong></h4>
<p><strong>期中報告影片 (week1至今所有成果10分鐘影片報告) : </strong></p>
<p><strong>雲端影片網址 (限制需要要有虎科大信箱才能觀看) :</strong></p>
<p><span><strong><a href="https://drive.google.com/file/d/1MCifVtJXgrAvC1EF82zbhwGSUwn30RFl/view">https://drive.google.com/file/d/1MCifVtJXgrAvC1EF82zbhwGSUwn30RFl/view</a></strong></span></p>
<p><span></span></p>
<h3>week10~14</h3>
<h4><strong><span>week10</span>:</strong></h4>
<p><strong><span>Use Google + Domain API to setup login for @gm.nfu.edu.tw users</span></strong></p>
<p><span>1. 登陸自己學校給的google帳號</span></p>
<p><span>2. 連到<span> </span><a href="https://console.developers.google.com/">https://console.developers.google.com/</a></span></p>
<p><span>3. 接受許可並建立專案(專案自己取)</span></p>
<p><span>4. 啟用API和服務</span></p>
<p><span>5. 點選</span><span lang="zh-TW">Google Domain API並啟用</span></p>
<p><span>6. 點選</span><span lang="zh-TW">憑據&gt;設定同意畫面 &gt; User Type選內部 &gt; 應用程式名稱自己取 &gt; 按儲存</span></p>
<p><span>7. </span><span lang="zh-TW">在“API和服務”下，進入“憑據”頁面</span></p>
<p><span>8. 建立憑證 &gt; 選OAuth 2.0 Client IDs &gt; 選網路應用程式</span></p>
<p><span>9. 將用戶端ID密碼儲存在tmp下</span></p>
<p><span><img alt="" height="607" src="https://s40523253.github.io/cd2020/images/week10-%E5%B8%B3%E5%AF%86.png" width="560"/></span></p>
<p><span>10. 授權JavaScript 來源 : <a href="https://localhost:8443/">https://localhost:8443</a></span></p>
<p><span>      授權的重定向URI : <a href="https://localhost:8443/login/google/">https://localhost:8443/login/google/</a></span></p>
<p><span>11. </span><span lang="zh-TW">開啟leo更改config中的scrum為自己存在tmp的用戶端ID密碼檔案名稱 &gt; 按save和darwROC</span><span lang="zh-TW"><br/></span></p>
<p><span>12. 執行</span><span lang="zh-TW">pip install authomatic</span></p>
<p><span>13. </span><span lang="zh-TW">開啟https://localhost:8443 並測試是否正常運作</span></p>
<p><span> </span></p>
<p><strong>week10開會紀錄 :</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/jr4IxIwdHLk" width="560"></iframe></strong></p>
<p><span><strong>topic2 :</strong></span></p>
<p><strong>coppeliasim : </strong>40723221</p>
<p><strong><span>MSModelingAndTFApproaches.pdf. 207頁 : 7人</span></strong><br/>40723249<br/>40623117<br/>40723221<br/>40723228<br/>40723236<br/>40723237<br/>40723243</p>
<p><br/><strong><span>MechatronicDesignCases.pdf. 46頁 : 2人</span></strong><br/>40723222<br/>40723244</p>
<p><span><strong>topic3 :</strong></span></p>
<p><strong><span>MechaFutureAndChallenges.pdf. 38頁 : 2人</span></strong><br/>40623252<br/>40523253</p>
<p><strong><span>MechaEducFutureNeed.pdf. 20頁 : 1人</span></strong><br/>40723240</p>
<h4><strong>ubuntu-Vrep虛擬主機設置</strong></h4>
<p>1. 下載<span>vitualbox</span>、<span>ubuntu</span>、<span>CoppeliaSim</span>四輪車控制器</p>
<p><a href="https://www.virtualbox.org/wiki/Downloads">https://www.virtualbox.org/wiki/Downloads</a></p>
<p>點<a class="ext-link" href="https://download.virtualbox.org/virtualbox/6.1.8/VirtualBox-6.1.8-137981-Win.exe">Windows hosts</a>下載</p>
<p><img alt="" height="315" src="https://s40523253.github.io/cd2020/images/VirtualBox%E4%B8%8B%E8%BC%89.png" width="560"/></p>
<div aria-label="目前顯示的是檢視器。" class="ndfHFb-c4YZDc ndfHFb-c4YZDc-AHmuwe-Hr88gd-OWB6Me ndfHFb-c4YZDc-vyDMJf-aZ2wEe ndfHFb-c4YZDc-i5oIFb ndfHFb-c4YZDc-TSZdd" tabindex="0">
<div class="ndfHFb-c4YZDc-Wrql6b" role="toolbar">
<div class="ndfHFb-c4YZDc-Wrql6b-SmKAyb">
<div class="ndfHFb-c4YZDc-Wrql6b-hOcTPc">
<div class="ndfHFb-c4YZDc-Wrql6b-jfdpUb" tabindex="-1">
<div class="ndfHFb-c4YZDc-Wrql6b-V1ur5d" data-tooltip-align="b,c" data-tooltip-class="ndfHFb-c4YZDc-tk3N6e-suEOdc" data-tooltip-delay="500" data-tooltip-offset="-6" data-tooltip-unhoverable="true"><span><strong>CoppeliaSim_4_Self_Driving_Car_Simulation.7z</strong></span></div>
<div class="ndfHFb-c4YZDc-Wrql6b-V1ur5d ndfHFb-c4YZDc-Wrql6b-V1ur5d-hpYHOb"></div>
<div class="ndfHFb-c4YZDc-Wrql6b-K4efff-V1ur5d ndfHFb-c4YZDc-Wrql6b-K4efff-V1ur5d-hpYHOb"><a href="https://drive.google.com/file/d/1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl/view">https://drive.google.com/file/d/1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl/view</a></div>
</div>
</div>
</div>
</div>
</div>
<p><span><img alt="" height="315" src="https://s40523253.github.io/cd2020/images/Ubuntu%E4%B8%8B%E8%BC%89.png" width="560"/></span></p>
<p><span> </span><span><strong><a href="https://drive.google.com/open?id=143jFMheM1xjLxhLkSAouThLzj3WUYX6_">Virtualbox appliance of Ubuntu 20.04</a></strong></span></p>
<p>2. 點<span>喜好設定在網路那新增</span><span>NAT</span><span>網路</span></p>
<p>3. <span>匯入</span><span>ubuntu</span></p>
<p>4. <span>設定網路選僅限主機介面卡</span></p>
<p><span>5. 啟動<span>ubuntu</span></span></p>
<p><span>6. 輸入密碼<span>kmol2020</span></span></p>
<p><span>7. 點<span>activites -&gt; </span><span>點</span><span>show application -&gt; 點<span>LX terminal</span></span></span></p>
<p>8. <span>輸入</span><span>xterm&amp; -&gt; </span><span>輸入ls顯示資料</span></p>
<p><span>9. 同時按<span>ctrl+</span><span>右鍵按著可以調整視窗的大小</span></span></p>
<p>10. <span>輸入</span><span>cd coppeliasim4_rev4 進入該資料夾內</span></p>
<p><span>11. 輸入ls顯示資料 -&gt; 再輸入cd CoppeliaSim_Edu_V4_0_0_ubuntu18_04</span></p>
<p>12. <span>輸入</span><span>./coppeliaSim.sh 即可開啟Vrep虛擬主機</span></p>
<p><strong>影片教學 :</strong></p>
<p><span><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/Cyq4O2w0DZI" width="560"></iframe></span></p>
<p><span></span></p>
<p><span></span></p>
<h4><strong><span>week11</span>:</strong></h4>
<p><strong>week11開會直播影片紀錄 :</strong></p>
<p><strong><iframe allowfullscreen="allowfullscreen" data-mce-fragment="1" height="314" src="https://www.youtube.com/embed/rMHvI863RMo" width="560"></iframe></strong></p>
<p><span></span></p>
<p><span></span></p>
<h2>40723237</h2>
<h3>week1-5</h3>
<h4>week2</h4>
<h4>更新python3.8.2</h4>
<p>到 <a href="https://www.python.org/downloads/release/python-382/">https://www.python.org/downloads/release/python-382/</a>https://www.python.org/downloads/release/python-382/ 下載 <span>Windows x86-64 executable installer，載完後執行<span>python-3.8.2-amd64.exe</span></span></p>
<p><span><img alt="" height="339" src="/images/2020-03-18_21-15-39.png" width="550"/></span></p>
<p><span>選擇 Modify</span></p>
<p><span><img alt="" height="339" src="/images/2020-03-18_21-20-48.png" width="550"/></span></p>
<p><span>不要選擇 pip，並選擇 Next</span></p>
<p><span><img alt="" height="340" src="/images/2020-03-18_21-28-09.png" width="550"/></span></p>
<p><span>接著選擇完你的下載目錄後就可以點選 Install 來安裝</span></p>
<p><span><img alt="" height="364" src="/images/2020-03-18_21-32-00.png" width="550"/></span></p>
<p></p>
<p>到自己原本可攜底下的 data 創一個 py383，並去剛剛下載對應的目錄，去複製 python 的檔案來 py383 貼上</p>
<p><span>到</span><a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><span>頁面，滑鼠右鍵另存新檔到自己原本可攜底下</span></p>
<p><span>到自己可攜底下的 wscite415 開啟 Scite.exe 編輯器 ，把之前 start_mdecourse.bat 拖移進來並利用 Replace 來把原本的 py373 取代成 py383 </span></p>
<p><span><img alt="" height="716" src="/images/2020-03-18_21-58-37.png" width="550"/></span></p>
<p></p>
<p>存檔後再重新開啟，讓系統重新讀取</p>
<p>接著安裝 pip 和 cmsimde 所需模組</p>
<p><span>先到 </span><a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><span> 下載 get-pip.py，並用程式碼自動載入</span></p>
<p><span><img alt="" height="287" src="/images/2020-03-18_22-10-32.png" width="550"/></span></p>
<p></p>
<p>下面有網址可以下載已做好的cd2020</p>
<p>https://drive.google.com/file/d/1DIM8rOFdTgGUXP6ugSSueat7pbZOWCaN/view?usp=sharing</p>
<p>實際操作影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/LaTbPF98Gkw" width="560"></iframe></p>
<h4>week3</h4>
<h4>Assignment 1</h4>
<p>creat the <span>portable Python programming system for Windows 10 64bit system</span></p>
<p><span>先在隨身碟底下創一個 CD2020 的資料夾，並在裡面創一個 data</span></p>
<p><span>接著在 data 底下創 6 個資料夾，分別叫 PortableGit msys2 python383 wscite237 tmp home</span></p>
<p><span>PortableGit</span></p>
<p>到 <a href="https://git-scm.com/download/win">https://git-scm.com/download/win</a> 下載 <span>64-bit Git for Windows Portable 下載完後，安裝檔案到 CD2020/data/PortableGit </span></p>
<p><span>msys2</span></p>
<p><span>到 <a href="https://www.msys2.org/">https://www.msys2.org/</a> 下載 msys2-x86_64-20190524.exe 下載完後，安裝檔案到 CD2020/data/msys2</span></p>
<p><span>python383</span></p>
<p><span>到 <a href="https://www.python.org/downloads/release/python-382/">https://www.python.org/downloads/release/python-382/</a> 下載 Windows x86-64 executable installer 下載完後，安裝並複製檔案到 CD2020/data/python383</span></p>
<p><span>wscite237</span></p>
<p><span>到 <a href="https://www.scintilla.org/SciTEDownload.html">https://www.scintilla.org/SciTEDownload.html</a> 下載 full 64-bit download ，下載完後，解壓縮檔案到 CD2020/data/wscite237輯器執行的 Scite.exe 編，打開 Options 下的 Global Options File 其中的預設值 code.page=0 修改設定為 code.page=65001，將 load.on.activate=1 前面的井字號拿掉</span></p>
<p>home</p>
<p>把舊的 2019fall/data/home 裡面複製 .gitconfig 並貼到新的 home 裡</p>
<p>tcc</p>
<p>到 <a href="https://github.com/TinyCC/tinycc">https://github.com/TinyCC/tinycc</a> 接著到命令提示字元裡 git clone <a href="https://github.com/TinyCC/tinycc.git">https://github.com/TinyCC/tinycc.git</a> tcc</p>
<p>Jupyterlab</p>
<p><span>到命令提示字元裡使用 pip install jupyterlab==2.0.1 就會自動安裝進去</span></p>
<p>Fossil SCM</p>
<p>到 <a href="https://www.fossil-scm.org/home/doc/trunk/www/index.wiki">https://www.fossil-scm.org/home/doc/trunk/www/index.wiki</a> 下載 fossil scm <span>下載完後，解壓縮檔案到 CD2020/data</span></p>
<p>Flutter</p>
<p>到 <a href="https://github.com/flutter/flutter">https://github.com/flutter/flutter</a> <span>接著到命令提示字元裡 git clone https://github.com/flutter/flutter.git -b stable</span></p>
<p><span>vscode</span></p>
<p><span>到 <a href="https://github.com/microsoft/vscode">https://github.com/microsoft/vscode</a> 接著到命令提示字元裡 git clone https://github.com/microsoft/vscode.git  vscode</span></p>
<p>tmp</p>
<p>git clone 自己的倉儲</p>
<p><span>安裝 pip 和 cmsimde 所需模組</span></p>
<p><span>先到 <a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a> 下載 get-pip.py，並用程式碼自動載入</span></p>
<p><span><img alt="" height="287" src="/images/WgLEB8kAJe.png" width="550"/></span></p>
<p><span>實際操作影片</span></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HuHDDvwnMag" width="550"></iframe></p>
<h4>week4</h4>
<h4>dart 轉 javascript</h4>
<p>確認可攜系統有無 flutter 等等需要用到裡面 dart dks 的 dart2js</p>
<p>修改 SciTE cpp.properties</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false"># for Dart 1/7
file.patterns.dart=*.dart
# for Dart 2/7
filter.dart=Dart(dart)|*.dart|
# for Dart 3/7
*filter.dart=$(filter.dart)
# for Dart 4/7
lexer.$(file.patterns.dart)=cpp
# for Dart 5/7
*language.dart=&amp;Dart|dart||
# for Dart 6/7
keywordclass.dart=\
abstract continue false new this \
as default  final   null throw \
assert deferred finally operator true \
async do for    part try \
async* dynamic get rethrow typedef \
await else  if return var \
break enum  implements set void \
case    export import static while \
catch external in super with \
class extends is    switch yield \
const factory library sync* yield* 
keywords.$(file.patterns.dart)=$(keywordclass.dart)
# for Dart 7/7
command.go.*.dart=dart.exe "$(FileNameExt)"
command.compile.*.dart=dart2js -o $(FileName).js $(FileNameExt)</pre>
<p>修完後的 http://mde.tw/cp2019/downloads/Scite_cpp.properties_dart_added.7z，<span>解開壓縮後, 放入隨身系統 data\wscite415\wscite 目錄中</span></p>
<p>之後開啟編譯器，開啟檔案，開啟檔案，使用 tool 的 compile 就可以轉成 .js 檔</p>
<p>實際影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/2gxKC9Kx0ow" width="550"></iframe></p>
<h3>week6-weeek14</h3>
<h5>Topic 0: From Digital to Industrial + Engineering Product Design Collaboration</h5>
<p>1.<a href="https://drive.google.com/open?id=1dhHffU7lwnYOqgOzO0jzpAayQsU1yw_J">DesignCollaborationProducts</a> (中文)</p>
<p></p>
<p>2.<a href="https://drive.google.com/open?id=1h2MzeiNPBNTukX1Imou46it-6Y9fR1Dw">IndustrialAndEngineeringProductDesignCollaboration</a><span> </span><span>(中文)</span></p>
<p></p>
<h5>Topic 1: Mechanical Design Process</h5>
<p>1.<a href="https://drive.google.com/open?id=19Af9uTbOUd9oc4mFVoyV0xzUMVmvqHLb">MechanicalDesignProcess</a><span> </span><span>(中文)</span></p>
<h4>安裝所需模組</h4>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false">pip install opencv-python
pip install imutils
pip install numpy</pre>
<p><img alt="" height="286" src="/images/OE1nF0sGaI.png" width="550"/></p>
<h4>assignment3</h4>
<p><a href="https://drive.google.com/file/d/1jqgc83Y1RQqQKdhGRY2y2_tl_9wpsOXF/view">MSModelingAndTFApproaches(151-180)中文</a></p><h1>group3</h1>
<p></p>
<h2>40723247</h2>
<h3>Assignment1</h3>
<h4>four-wheeled robot</h4>
<p>從<span> </span><a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a>龐大的資料中，<br/>可以抓出幾個重點章節，<span>BubbleRob tutorial</span>、<span>Line following BubbleRob tutorial</span>、<br/><span>External controller tutorial</span>、<span>Simulation dialog</span>、<span>Simulation</span></p>
<p><span>BubbleRob tutorial :<span><span> </span>設計簡單的移動機器人 BubbleRob 時嘗試介紹很多</span><br/><span>CoppeliaSim 功能。</span><br/></span></p>
<p><span>Line following BubbleRob tutorial :<span> </span><span>在本教程中，我們在擴展 BubbleRob 的</span><br/><span>功能，以使他遵循基礎上的規則。</span><br/></span></p>
<p><span>External controller tutorial :<span> </span><span>研究在 CoppeliaSim 中，有好幾種方法可以控</span><br/><span>制機器人或模擬</span><br/></span></p>
<p><span>Simulation dialog &amp; Simulation :<span>此教程主要在教如何設置 bubbleRob 機器</span><br/><span>人，在上學期我們有實際操作過。</span></span></p>
<p><span><span></span></span></p>
<h4>Portable system</h4>
<p>將可攜系統中的 python3.7.3 更新至 python3.8.2 版本</p>
<p>step1 先在自己資料夾內新增一個 cd2020，然後在 cd2020 內新增一個資料 夾 data，在 data 內再新增 py382 及 wscite432、portablegit。</p>
<p>step2 進入<span> </span><a href="https://www.python.org/">ptrhon</a><span> </span>官網</p>
<p>step3 到<span> </span><a href="https://www.python.org/downloads/windows/">downloads</a><span> </span>內點選<span> </span><a href="https://www.python.org/downloads/release/python-382/">Latest Python 3 Release - Python 3.8.2</a></p>
<p>step4 滑到最下面，找到<span> </span><a href="https://s40723247.github.io/get_page/Portable%20system/Windows%20x86-64%20executable%20installer">Windows x86-64 executable installer</a> 下載</p>
<p>step5 開始下載，把 pip 選項取消，按 next 把檔案下載至資料夾 py382</p>
<p>step6 下載 SciTE 系統<span> </span><a href="https://s40723247.github.io/get_page/Portable%20system/full%2064-bit%20download">full 64-bit download</a>，下載完後解壓縮到 data 下的 wscite432</p>
<p>step7 建立 start.bat 及 stop.bat</p>
<p>step8 下載 MSYS2<span> </span><a href="https://s40723247.github.io/get_page/Portable%20system/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a><span> </span>到 data 下</p>
<p>step9 下載<a href="https://s40723247.github.io/get_page/Portable%20system/PortableGit%2064-bit%20Git%20for%20Windows%20Portable"><span> </span>PortableGit 64-bit Git for Windows Portable</a><span> </span>到 portablegit 下</p>
<p>step10 安裝 pip，到<span> </span><a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><span> </span>頁面，另存新檔 到 data 下</p>
<p>step11 執行指令，將 python3.8.2 版本缺少的模組下載下來 python get-pip.py pip install flask bs4 lxml pelican markdown flask_cors leo</p>
<h3>Assignment2</h3>
<h4><strong>topic0</strong></h4>
<p> Topic 0: From Digital to Industrial + Engineering Product Design Collaboration</p>
<p><a href="https://drive.google.com/open?id=1YHQwYduSMisiJQS-Jr_HhJghzIqP_SBc">DigitalProductCollaboration.pdf</a></p>
<p>這篇是再說 通過設計協作創建更好的產品 ，討論如何協同設計與介紹一些協同的工具。</p>
<p>裡面有提到一些 :</p>
<p><span>FlGMA:</span></p>
<p>這是一個協作優先的共享工作區工具。 Figma非常適合在<br/>其中有多個人設計文件的相同區域。您可以觀看隊友設計<br/>或在同一設計上一起工作實時。</p>
<p><span>MARVEL :</span></p>
<p>雖然 Figma傾向於感覺更自由和靈活，但 Marvel允許更標<br/>準化的形式 合作。這也使我們的客戶可以輕鬆地與我們合<br/>作 。</p>
<p><span>Zeplin:</span></p>
<p>是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工<br/>作。</p>
<p><span>Quip:</span></p>
<p>是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄<br/>並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。</p>
<p><strong>合作的過程 :</strong></p>
<p><span>階段 1 線框與集思廣益</span><br/><span>階段 2：研究與 框架</span><br/><span>階段 3：迭代和反饋</span><br/><span>階段 4：客戶的反饋和發展</span></p>
<p><strong>最終結果</strong></p>
<p><br/>Press Play 的實時繪圖動畫是工作中設計協作的一個範 例。一隊跨學科專家一起解決更大的設計和開發挑戰含義。沒有設計協作，我們將找不到理想的交集用戶體驗，視覺和技術。設計協作需要解決建築中伴隨的複雜， 通過 關鍵問題 的產品和經驗。 利用多個團隊成員的專業知識跨學科的設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。借助正確的思維方式，工具和流程，進行設計協作使團隊能夠通過創造性思維和迭代來更深入。</p>
<h4>Topic 1</h4>
<p>Mechanical Design Process</p>
<p><a href="https://drive.google.com/file/d/13THamnfayiRT4Wa9KzmjXQSP4ZW2jIej/view?usp=sharing">MechanicalDesignProcess.pdf</a><span>.</span></p>
<p><strong>Ch1 成功的設計:</strong></p>
<p>第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。</p>
<p><strong>Ch2 構建設計:</strong></p>
<p>第二章是在說設計產品的流程，設計都將僅從產品構思開始，將通過圖紙記錄設計，以便能夠以可重複的方式構建更多產品方式。</p>
<p><strong>Ch3結構上的考慮:</strong></p>
<p>以“堅實的基礎”為基礎，以便其餘設計可以以此為基礎。 本章將重點介紹 :</p>
<p><span>1.利用材料概念的強度提出結構解決方案</span></p>
<p><span>2.定義考慮我們電子產品結構設計的通用流程</span></p>
<p><span>3.看一些具體說明一般概念的示例</span></p>
<p><strong>Ch4材料與工藝:</strong></p>
<p>現在已經有了前面設計的結構基礎，將開始實踐本章的“回歸基礎”，然後遵循產品規格，但現在我們將回到成本考慮因素。 通過重新設計“檢驗標準”，我們將繼續設計更多“建築模塊” ，設計師可以使用確定其外殼零件的最佳材料和工藝。 選擇組成裝配體的各個零件的材料和過程，設計師還得考慮了產品的組裝和維修。</p>
<h3>W10</h3>
<p>gm用戶登陸設定</p>
<ol>
<li>先登入@gm帳號</li>
<li>至網站 <a href="https://console.developers.google.com/">https://console.developers.google.com</a></li>
<li>許可google API</li>
<li>OAuth同意畫面按下同意</li>
<li>選擇內部用戶類型</li>
<li>建立憑證</li>
<li>在已授權的 JavaScript 來源，新增URL https://localhost 、<a href="https://localhost:8443/">https://localhost:8443</a></li>
<li>在已授權的重新導向 URI，<span>新增URL </span><span>https://localhost 、<a href="https://localhost:8443/login/google/">https://localhost:8443/login/google/</a></span></li>
<li><span>儲存帳號密碼到tmp內檔名改成自己的學號</span></li>
<li>git clone 老師的CD2020PJ1克隆下來到tmp內</li>
<li>用LEO更改CD2020PJ1資料夾內的cd2020pj1.leo並儲存</li>
<li>打開wsgi.py就會自動導入畫面即完成</li>
</ol>
<p>以下是我的練習影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/9xAZt_WdNAs" width="560"></iframe></p>
<h3>W11</h3>
<p><strong>WEEK11</strong></p>
<ol>
<li><strong>先下載事前資料</strong></li>
<li><strong><span>匯入ubuntu</span></strong></li>
<li><strong><span>設定虛擬主機的網路埠號</span></strong></li>
<li><strong><span>啟動ubuntu</span></strong></li>
<li><strong><span>輸入密碼kmol2020</span></strong></li>
<li><strong><span>輸入xterm&amp;開啟</span></strong></li>
<li><strong><span>輸入ls查看內容</span></strong></li>
<li><span>cd coppeliasim4_rev4-&gt;ls-&gt;cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04-&gt;ls-&gt;./coppeliaSim.sh</span></li>
<li><span>打開檔案sdc.ttt</span></li>
<li><span>將檔案中的car_model.py放入編譯器執行</span></li>
<li><span>完成</span><span></span><span><img alt="" src="https://youtu.be/FOB73Ov7g4A"/></span></li>
</ol>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/FOB73Ov7g4A" width="560"></iframe></p>
<p></p>
<h2>40723205</h2>
<h3>week10</h3>
<p><strong>gm用戶登入設置</strong></p>
<p><strong>操作步驟:</strong></p>
<p><strong>1.先git clone cd2020pj1倉儲。</strong></p>
<p><strong>2.建立新專案。</strong></p>
<p><strong>3.點選啟用API和服務，點選Google+ Domains API並點選管理。</strong></p>
<p><strong>4.<span>點選憑證及設定同意畫面</span>。</strong></p>
<p><strong>5.點選憑證建立OAuth用戶端ID。</strong></p>
<p><strong>6.設定來源及URL</strong></p>
<p><strong>7.將ID及密碼複製到編輯器，存儲在tmp下。<br/></strong></p>
<p><strong>8.開啟leo，並打開cd2020pj1.leo。</strong></p>
<p><strong>9.將路徑及名稱改為自己的。</strong></p>
<p><strong>10.存儲，並點選ROC。</strong></p>
<p><strong>11.輸入pip install authomatic。</strong></p>
<p><strong>12.<span>進入pj1，打開wsgi.py，即完成。</span></strong></p>
<h3>week11</h3>
<p><b>ssh</b></p>
<p><strong><span>設定以ssh代替輸入帳密</span></strong></p>
<p><strong><span></span></strong></p>
<p><strong>Ubuntu設定及API連線</strong></p>
<p><strong><span>1.下載<span><a href="https://www.virtualbox.org/wiki/Downloads">vitualbox</a>、<a href="https://drive.google.com/open?id=143jFMheM1xjLxhLkSAouThLzj3WUYX6_">ubuntu</a>、<a href="https://drive.google.com/open?id=1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl">CoppeliaSim</a></span><span>四輪車控制器檔案。</span><br/><span>2.打開vitualbox，匯入ubuntu。</span><br/><span>3.設定虛擬主機，三個埠號(22、8443、19999)]。</span><br/><span>4.設定完成後啟動ubuntu。</span><br/><span>5.輸入密碼kmol2020，並開啟lxterminal。</span><br/><span>6.輸入xterm&amp;開啟，並使用ctrl+右鍵將視窗放大。</span><br/><span>7.依照步驟打開coppeliasim，輸入ls查看內容。</span><br/><span>8.cd coppeliasim4_rev4-&gt;ls-&gt;cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04-&gt;ls-&gt;./coppeliaSim.sh。</span><br/><span>9.開啟後打開檔案sdc.ttt。</span><br/><span>10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。</span><br/><span>11.將檔案中的car_model.py放入編譯器中，並執行。</span><br/><span>12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。</span></span></strong></p>
<p><strong> </strong></p>
<h3>Assignment1</h3>
<p><span> Random grouping</span></p>
<p><strong><span>請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？</span></strong></p>
<p><span><span>1.去網站<span> </span></span><a href="http://mde.tw/cd2020/content/Grouping.html"><span>http://mde.tw/cd2020/content/Grouping.html</span></a></span></p>
<p><span><span>2.點<span> </span></span><a href="https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&amp;gh_repo=cd2020&amp;gh_path=downloads/dart_ex/even_grouping&amp;theme=dark"><span>Dart source code for random grouping</span></a></span></p>
<p><span>3.去HTML更改為我們班的路徑</span></p>
<p><span>4.點Run即完成亂數分組.</span></p>
<p>Portable system</p>
<p><span><strong>1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data</strong></span></p>
<p><span><span><span><strong>下新增資料夾py382及<span>wscite432、portablegit</span><span>。</span><br/><span></span></strong></span></span></span></p>
<p><span><span><span><strong><span>2.進入</span><a href="https://www.python.org/">Python</a><span>官網。</span><br/><span color="#808080"></span></strong></span></span></span></p>
<p><span><span><span><strong><span color="#808080">3.點選Downloads下的<a href="https://www.python.org/downloads/windows/">Windows</a>，並點選<a href="https://www.python.org/downloads/release/python-382/">Latest Python 3 Release - Python 3.8.2</a>。</span></strong></span></span></span></p>
<p><span><span><span><strong><span color="#808080">4.<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a><span>下載。</span></span></strong></span></span></span></p>
<p><span><span><span><strong><span color="#808080"><span>5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。</span></span></strong></span></span></span></p>
<p><span>6.下載SciTE系統 <a href="https://www.scintilla.org/wscite432.zip">full 64-bit download</a>，下載完後解壓縮至data下的wscite432。</span></p>
<p><span color="#000000"><span>7.建立新的start.bat及stop.bat。</span></span></p>
<p>8.<span>下載MSYS2 </span><a class="button" href="http://repo.msys2.org/distrib/x86_64/msys2-x86_64-20190524.exe">msys2-x86_64-20190524.exe</a> 至data下。</p>
<p>9.<span>下載PortableGit </span><a href="https://github.com/git-for-windows/git/releases/download/v2.25.1.windows.1/PortableGit-2.25.1-64-bit.7z.exe">64-bit Git for Windows Portable</a> 至 <span>portablegit下。<br/></span></p>
<p>10<span color="#000000"><span>.安裝pip，到</span></span><a href="https://bootstrap.pypa.io/get-pip.py">https://bootstrap.pypa.io/get-pip.py</a><span>頁面，另存新檔到data下。</span></p>
<p>11.執行指令<span>，將python3.8.2版本缺少的模組下載下來。</span></p>
<p>four wheeled robot</p>
<p><a href="https://www.coppeliarobotics.com/helpFiles/index.html">https://www.coppeliarobotics.com/helpFiles/index.html</a>資料中</p>
<p><span>BubbleRob tutorial :<span><span> </span>設計移動的機器人<span> </span></span><span>。</span><br/></span></p>
<p><span>Line following BubbleRob tutorial :<span> </span><span>在本教程中，</span><span>調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。</span><br/></span></p>
<p><span>External controller tutorial :<span> </span><span>有好幾種方法可以控</span><span>制機器人或模擬。</span></span></p>
<h3>Assignment2</h3>
<p>Topic 0</p>
<p><span>FlGMA:</span><span>這是一個協作優先的共享工作區工具。 Figma非常適合在</span><br/><span>其中有多個人設計文件的相同區域。您可以觀看隊友設計</span><br/><span>或在同一設計上一起工作實時。</span></p>
<p><span>MARVEL :這是一個適合與客戶溝通的地方，客戶也可以通過這裡察看進度。</span></p>
<p><span>Zeplin:是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工<br/><span>作。</span></span></p>
<p><span>Quip:是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄<span>並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。</span></span></p>
<p><span><span><strong>合作的過程 :</strong></span></span></p>
<p><span><span><strong>階段一:線框和自由討論</strong></span></span></p>
<p><span><span><strong>階段二:如何設計產品和思考市場上的需求</strong></span></span></p>
<p><span><span><strong>階段三:統整大家的方法，並確保達到客戶的標準</strong></span></span></p>
<p><span><span><strong>階段四:客戶的反應和意見</strong></span></span></p>
<p><span><span><strong>結論:協同真的很重要，它可以幫助我們更快完成目標也讓產品更加完善<span>。</span></strong></span></span></p>
<p>Topic 1</p>
<p><strong>Ch1<span> </span></strong><strong>成功的設計</strong></p>
<p>第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。</p>
<p><strong>Ch2<span> </span></strong><strong>構建設計</strong></p>
<p>第二章是在說設計產品的流程，設計都將僅從產品構思開始。</p>
<p><strong>Ch3</strong><strong>結構上的考量</strong></p>
<p>第三章主要講述產品的結構問題，主要分為材料強度、結構設計過程、需求分析、靜載荷、動態負載進而討論。</p>
<p><strong>Ch4</strong><strong>材料與工藝</strong></p>
<p>第四章主要講述產品所需的最佳材料與工藝，產品若已經符合規格的要求，接著就必須考慮到設計的成本和材料進而去影響工藝。</p>
<p><span><span></span></span></p>
<h2>40723239</h2>
<p><span>test</span></p>
>>>>>>> 36907be6ce33abb0e8a527d6e8b57a24aeaa523e
<h1>group4</h1>
<h2>40623251</h2>
<p><span>test</span></p>
<h2>40623115</h2>
<p><span>test</span></p>
<h2>40623144</h2>
<p><span>test</span></p>
<p></p>