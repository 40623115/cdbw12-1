<<<<<<< HEAD
var tipuesearch = {"pages": [{'title': '分組人員', 'text': 'group:1 \n 40723213 40723215 40723246 ---- group:2 \n 40723240 40523253 40723237 ---- group:3 \n 40723247 40723205 40723239 ---- group:4 \n 40623251 40623115 40623144 \n', 'tags': '', 'url': '分組人員.html'}, {'title': 'group1', 'text': '', 'tags': '', 'url': 'group1.html'}, {'title': '40723213', 'text': 'test \n', 'tags': '', 'url': '40723213.html'}, {'title': '40723215', 'text': 'test \n', 'tags': '', 'url': '40723215.html'}, {'title': '40723246', 'text': 'test \n', 'tags': '', 'url': '40723246.html'}, {'title': 'group2', 'text': '', 'tags': '', 'url': 'group2.html'}, {'title': '40723240', 'text': '', 'tags': '', 'url': '40723240.html'}, {'title': '40523253', 'text': '\n', 'tags': '', 'url': '40523253.html'}, {'title': '40723237', 'text': '', 'tags': '', 'url': '40723237.html'}, {'title': 'group3', 'text': '', 'tags': '', 'url': 'group3.html'}, {'title': '40723247', 'text': '\n', 'tags': '', 'url': '40723247.html'}, {'title': '40723205', 'text': 'test \n', 'tags': '', 'url': '40723205.html'}, {'title': '40723239', 'text': 'Ubuntu設定及API連線 \n 操作步驟: 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器檔案。 2.開啟vitualbox，匯入ubuntu。 3.設定虛擬主機的網路埠號。[NET:設定->網路->附加到(A)改成NAT->進階->連接埠轉送->設定三個埠號(22、8443、19999)]。 4.設定完成後啟動ubuntu。 5.輸入密碼kmol2020，並開啟lxterminal。 6.輸入xterm&開啟，並使用ctrl+右鍵將視窗放大。 7.依照步驟打開coppeliasim，輸入ls查看內容。 8.cd coppeliasim4_rev4接著輸入 ls再來輸入 cd\xa0 CoppeliaSim_Edu_V4_0_0_Ubuntu18_04輸入ls最後輸入./coppeliaSim.sh。 9.開啟後打開檔案sdc.ttt。 10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。 11.將檔案中的car_model.py放入編譯器中，並執行。 12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。 \n week10\xa0\xa0google用戶登陸 \n 登錄到您的@gm帳戶 鏈接到 https://console.developers.google.com 接受許可並創建Google API項目 啟用Google +域API 在Google + Domain API憑據下，按CONFIGURE CONSENT SCREEN按鈕 選擇內部或外部用戶類型並添加新的應用程序名稱 在“ API和服務”下，進入“憑據”頁面 為Web應用程序創建“ OAuth 2.0客戶端ID”類型的憑據 授權的JavaScript來源：https：// localhost：8443 授權的重定向URI：https：// localhost：8443 / login / google / 將您的客戶ID和客戶機密保存到oauth_gm.txt中 \n 開啟leo更改config中的scrum為加上學號的txt檔案名稱， 並且修改完成之後按下save和darwROC pip install authomatic 開啟https://localhost:8443 測試是否可以運作 \n', 'tags': '', 'url': '40723239.html'}, {'title': 'Assignment1', 'text': '作業一: 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n Random grouping 亂數分組程式 \n 描述如何針對該課程進行有效隨機分組，或隨機點名 ? \n 要進行隨機分組及隨機點名，必須先了解程式裡導入的模組及在模組中所用的 語法、迴圈 : request、ast.literal_eval、random、for迴圈 \n \n request模組 : 此模組是為了可以使用 \xa0 Python \xa0 來下載網頁上的資料，是以request模組建立適當的 \xa0 HTTP \xa0 請求，透過 \xa0 HTTP \xa0 請求從網頁伺服器下載指定的資料，分為兩種模式 Post 、 Get 。 參考文獻 :\xa0 https://ithelp.ithome.com.tw/articles/10206215 \n ast模組 : \xa0 此模組是 python 原始碼到位元組碼的一種中間產物，其中的語法literal_eval是為了能夠安全地評估表達式節點或包含 Python 文字或容器顯示的字符串。提供的字符串或節點只能由以下 Python 文字結構組成：字符串、字節、數字、元組、列表、字典、集合、布林值、 None 。 參考文獻 :\xa0 https://docs.python.org/3/library/ast.html https://www.itread01.com/content/1544847254.html \n random模組 : 此模組用於生成偽隨機數，且有許多種用法，例如 : 隨機選取choice、隨機選取sample\xa0(一次選多筆資料 ) 、隨機調換順序\xa0shuffle\xa0(就地調換順序 ) 、隨機取得亂數 \xa0 random\xa0(0~1之間的隨機亂數 ) 、隨機取得亂數 \xa0 uniform\xa0(可以指定範圍 ) 。 參考文獻 :\xa0 https://ithelp.ithome.com.tw/articles/10207483 (4)\xa0for迴圈 : \xa0 在處理資料的時候，時常會需要重複執行某些相同的步驟；而迴圈 \xa0 (loop) \xa0 的作用是讓指定的某段敘述在條件符合的情況下一直重覆執行，是程式設計中很重要的一種控制結構，且分為兩類 : for、while \n \n ○\xa0for迴圈基本語法 : for\xa0變數 \xa0 in\xa0list、字串、range ○\xa0while迴圈基本語法 : while\xa0布林值 \xa0for迴圈及while迴圈比較 : \xa0for迴圈比較適用在已知迴圈數的問題，而 while迴圈則適用在「無法預知迴圈數」的問題上。 參考文獻 : \xa0https://medium.com/ccclub/ccclub-python-for-beginners-tutorial4990a5757aa6 \xa0總結 : 在隨機分組及抽點的程式中，利用 request 模組中的 request.get(link) 語法將網址中的學員學號資料擷取下來，接著利用 ast 模組中的 ast.literal_eval 語法將資料原始碼進行分析並轉換，再來利用 random 中的 random.suffle 語法及 for 迴圈將學員學號打亂並進行分組或抽點。在隨機分組及抽點的程式碼，要更加有效的執行隨機分組及點名，要先了解其中的模組及語法，然而從中進行修改。 \n Four wheel car 四輪車 \n 您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n 部分內容翻譯概述: Simulation \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 透過這一章可以清楚的知道關於模擬的一些運作細節及流程，介紹了仿真循環、仿真速度，盡可能達到與實際操作的時間相同，通過嘗試使仿真時間與實時保持同步來支持實時仿真，由於計算機能力有限無法進行仿真，但我們可以使用調整模擬速度的功能，總之要完成四輪車模擬必須熟悉模擬系統。 \n Simulation settings dialog : \xa0 在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因硬體的效能不足而造成模擬之屏幕刷新率太慢。 BubbleRob tutorial : \xa0 此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。 \n Line following BubbleRob tutorial : \xa0在此教程中，旨在擴展BubbleRob的功能，以使BubbleRob遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。 External controller tutorial : \xa0 此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人）:第四種方法是通過ROS節點，ROS與遠程API相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（BØ）節點，與ROS類似，BlueZero是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。 \n 總結: \xa0 最後要完成四輪機器人必須了解模擬程式的操作，包含模型的設置及各模型組合、各模型的物理特性設置、感測器設置、視覺感測器設置、外部控制器的選擇及設置、路徑程式碼設置，還有模擬時會發生的狀況處理，須達到這些基本的設置才能完成四輪機器人的設計。 \n Portable system \n 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data下新增資料夾py382及wscite432、portablegit。 2.進入 Python 官網。 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 \n 4.找到 Windows x86-64 executable installer 並下載。 \n 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382 \n 6.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n 7.建立新的start.bat及stop.bat。 \n 8.下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 9.下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0portablegit下。 10.安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 11.執行指令，將python3.8.2版本缺少的模組下載下來。 \n start.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n \n \n \n @echo   off \n set   Disk = y \n subst  % Disk % :  "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set   HomePath = % Disk % :\\home \n set   HomeDrive = % Disk % :\\home \n set   Home = % Disk % :\\home \n set   USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set   PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set   PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set   PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set   path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set   path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set   path_git = % Disk % :\\portablegit\\ bin ; \n set   path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n \xa0 \xa0 \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n \n \n \n \n \n stop.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo   off \n set   Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill  / IM python.exe  / F \n taskkill  / IM pythonw.exe  / F \n taskkill  / IM scite.exe  / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst  % Disk % :  / D \n REM 關閉 cmd 指令視窗 \n taskkill  / IM cmd.exe  / F \n \xa0 \xa0 \n EXIT \n \n \n \n \n \n \n \n \xa08. 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 9. 下載 PortableGit\xa0 64-bit Git for Windows Portable\xa0 至\xa0 portablegit下。 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n \n \n \n \n \n \n 1 \n \n \n \n python get - pip.py \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 2 \n \n \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n \n \n \n \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Assignment2', 'text': '1.2確定設計過程 \n 1.2.1確定每個人的設計過程 \n 有經驗的儘管所有轉錄數據都包含與設計過程有關的信息，它們都與其他內容混合在一起，包括情況項目的目標，目標，角色，必要的技能和知識，我們首先提出通過審查相關文獻以識別“過程要素”來建立編碼框架用於構建設計過程的文件。 \n 產品開發及其活動為信息過程。收集，創建，解釋，轉換和轉移。 \n Ulrich和 Eppinger （ 2012 ）將其描述為必要的信息對於注入的最終結果以轉化當前的設計問題解決下一個問題，以降低不確定性，從而產生產出，直到最終的結果就形成了。這被建模為轉換將功能規格（輸入）轉換為人工規格（輸出） \n （ Takeda ， Veerkamp ，＆ Yoshikawa ， 1990; Tomiyama ＆ Yoshikawa ， 1986 ）。 \n Browning和 Ramasesh （ 2007 ）指出，採用信息處理的觀點未能捕獲完整的信息流 \n 因為對交互的了解很少。他們認為確定組織單位之間的互動，因為它們會產生依賴性 \n 建立可交付流程模式的活動之間。總之，從這個角度來看，過程建模的基本元素是 \n 用 IPO （ InputeProcesseOutput ）表示形式概括為“信息流”以及組織單位（人員，團隊，公司，等等。）。 \n 工程設計過程模型 \n 由 Pahl 等人提出。 （ 2007 年）證明了每個階段。第一階段的輸入是“任務”，結果是“規範”再次進入下一階段。這樣，繪製連接輸入和結果的連續發展階段出來。關於“任務”和“設計活動” \n 任務和評估結果。通常，評估發生在相對在很短的時間內決定“前進，重複或下降”。因此，我們命名了這些類型的活動（評估，設計審查，登門檢查，決策 - 此時，我們有兩個編碼類別：“任務”和“事件”。總而言之，我們可以使用四個編碼對設計過程進行建模 \n 類別； “任務”，“事件”，“信息流”和“互動”，並且可以是用階段的連接來表示。至此，設計階段流程可以用“ \xa0 inputetask （設計活動） eevent （決策）以下內容描述瞭如何對過程元素進行編碼。 \n 信息流：信息流是在任務或事件時生成的發生。它總是伴隨著輸入和輸出。 \n 工程的輸入 : \n 設計活動。我們對“從 ID 到 ED 的 3D CAD 數據”進行了編碼。 \n 互動：發生任務或事件時，兩組經常 \n 相互作用。例如，工業設計師檢查內部是否 \n 工程設計師建議他們通過提供空間來修改空間 \n 我們從每個轉錄的訪談數據中識別出流程要素。 \n 我們盡可能用參與者自己的話語標記他們。我們用了字段註釋作為補充數據源。在這樣做的同時，我們安排按時間順序將編碼後的元素按流程圖格式連接構建部分設計過程。該方法被廣泛採用以可視化工業流程模型（ Vergidis ， Tiwari 和 Majeed ， 2008 年）。我們也確定了設計過程中涉及的項目類型和目標 \n 採訪數據。兩名研究人員執行了整個程序。一研究人員首先構建了部分設計流程，另一研究人員通過檢查採訪數據檢查了他們。結果，我們獲得了 45 部分公司使用 7-9 進行的部分設計過程（請參見表 2 ）。 \n \n 1.2.2確定協作產品設計流程 \n 下一步是將每個公司的設計流程整合到協作中 \n 通過“馬賽克方法”進行設計過程。我們首先收集了部分設計 \n 公司中特定項目的流程。之後，我們通過比較和合併部分過程，合併過程元素。從工業設計師那裡提取的部分過程訪談數據提供了有關工業設計活動的豐富信息，包括與工程設計師的互動行為，但信息較少純工程設計活動。工程界也是如此設計。 \n 我們將公司的工業設計師的部分流程合併到了圍繞工業設計活動重建設計流程。在同一時間，我們利用工程設計師提供的信息來補充並從工程設計方面加強設計活動。我們圍繞同一工程設計活動重新構建設計流程辦法。我們最終將這兩個設計過程合併為一個協作產品設計過程。在鑲嵌方法中，結合交叉檢查的部分過程 \n 有助於提高可靠性和通用性。這明顯減少了構建信息不完整的流程的可能性 \n 通過抵消彼此的信息。因此，“馬賽克方法”減少了構建錯誤過程的可能性。 \n 最後，我們通過合併階段元素（輸入，任務，事件和輸出）放入框中，並用相關任務將其命名（請參見圖 2 ）。例如，工業設計師開始繪製各種想法根據前一階段的研究結果繪製的草圖。然後，他們選擇一個通過評估獲得一些最佳草圖。根據選擇結果，他們決定進入下一階段或重複當前階段。因此，‘理想草圖階段由“研究結果（輸入），“想法草圖（任務）”，“評估”（事件）和“最佳草圖（輸出）”。 \n \n 1.2.3簡化流程 \n 一旦制定了每個公司的協作產品設計流程，我們對它們進行了分類，以確定其類型，目的和條件。但是，由於每個公司的流程都包含詳細的設計操作和信息， \n 直接在公司之間進行比較並不容易。從而，我們以“流程”的概念簡化了每個公司的設計流程塊以幫助其可比性，同時保持必要的特徵。 \n 我們發現在一組小的連續階段中存在一種模式。那裡是完成所有連續階段的主要工作。完成後明確的新階段從另一項工作開始。我們將這些小階段定義為“流程塊”。其特點是初始輸入，內部迭代，決策，最終結果和不可逆的趨勢（圖 4 ）。 \n 內置的流程塊中的流程從初始輸入開始，跨小範圍運行裡面的階段。迭代或反饋可能在內部的小階段之間發生大塊。最後，他們對最終結果做出最終決定。 \n 這是一個里程碑，指示該階段將跳到下一階段。 \n 例如，在圖 3 中藍色方框中，該塊的主要工作是制定執行六個小階段的設計概念。當他們在渲染階段，如果渲染結果，他們可以回到構思草圖階段 \n 對渲染評估事件不滿意。在最後階段，設計樣機，因為結果由高層管理人員確認，並且然後跳到“產品計劃會議”。 \n 兩個流程塊之間的流程幾乎沒有機會在前一個結果進入下一個塊的輸入之後反轉。 \n 跨團隊通常進行最終設計，並由每個部門的最高經理。返回上一個塊意味著它 \n 無法滿足投放市場的時間表。因此，應該有一個最高管理層關於這個問題的決定。階段之間的反向迭代或反饋在實際情況中很少發生。它發生在一個塊中的各個階段之間。因此，似乎項目之間幾乎不可能放棄階段，但可能在階段之間。 \n 我們通過其主要工作來命名流程塊。在命名塊時， \n 我們發現，“概念設計”一詞在工程上的用法有所不同 \n 設計和工業設計。工程設計中的概念設計是關於通過開發廣泛的解決方案與產品的工作原理相關的技術概念（ Haik ＆ Shahin ， 2010; Kroll ， Condoor 和 Jansson ， 2001 ；烏爾曼， 2009 年）。但是，工業設計師在概念設計中決定產品樣式和交互的方向階段，以概念關鍵字，情緒板，想法表示草圖和用戶場景（ Press ＆ Cooper ， 2003; Tovey ＆ Harris ， 1999;Vredenburg ， Isensee ， Righi 和 Design ， 2001 年）。因此，我們標記了這個概念 \n \n', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'group4', 'text': '', 'tags': '', 'url': 'group4.html'}, {'title': '40623251', 'text': 'test \n', 'tags': '', 'url': '40623251.html'}, {'title': '40623115', 'text': 'test \n', 'tags': '', 'url': '40623115.html'}, {'title': '40623144', 'text': 'test \n', 'tags': '', 'url': '40623144.html'}]};
=======
var tipuesearch = {"pages": [{'title': '分組人員', 'text': 'group:1 \n 40723213 40723215 40723246 ---- group:2 \n 40723240 40523253 40723237 ---- group:3 \n 40723247 40723205 40723239 ---- group:4 \n 40623251 40623115 40623144 \n', 'tags': '', 'url': '分組人員.html'}, {'title': 'group1', 'text': '', 'tags': '', 'url': 'group1.html'}, {'title': '40723213', 'text': '<<<<<<< HEAD \n test \n', 'tags': '', 'url': '40723213.html'}, {'title': '40723215', 'text': 'test \n', 'tags': '', 'url': '40723215.html'}, {'title': '40723246', 'text': 'test \n', 'tags': '', 'url': '40723246.html'}, {'title': 'group2', 'text': '', 'tags': '', 'url': 'group2.html'}, {'title': '40723240', 'text': '', 'tags': '', 'url': '40723240.html'}, {'title': '40523253', 'text': 'week1~5 \n week1 : \n 登入自己的github帳戶，並且創建"cd2020"的個人倉儲。 \n 用cmsimde建立網站 \n 步驟: \n \n week2 : \n 更新可攜系統下的python 3.7.3至python 3.8.2 \n 1.進入官網下載區 :\xa0 https://www.python.org/downloads/windows/ \n 2. 下載\xa0 Windows x86-64 executable installer \n \n 3.安裝pyehon 3.8.3 ，安裝時不勾選pip \n \n 4.安裝時到自己可攜的data 新增一個資料夾叫py383，安裝路徑選此處201906_fall\\data\\py383 \n \n 5. \xa0用Scite.exe \xa0 更改執行檔start_mdecourse.bat，將py373全部取代成py383 \n \n 6.執行python get-pip.py和python -m pip install flask flask-cors markdown lxml bs4 pelican leo \n week3 : \n Assignment 1: \n Due March 25, 2020 for class 2a and March 26, 2020 for class 2b. \n \n \n Describe how to do an efficient random grouping for this course or do the roll calling randomly? \n \n \n Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n \n \n What do you need to know from \xa0 http://www.coppeliarobotics.com/helpFiles/index.html \xa0 to implement a four-wheeled robot? \n \n \n \n 分工內容: \n 40523253 : \xa0 亂數分組程式 40623117 : \xa0 亂數分組程式 40623252 : \xa0 4輪車 40723221 (group leader) : \xa0 4輪車 40723222 : \xa0 4輪車 40723228 : \xa0 亂數分組程式 40723236 : \xa0 4輪車 40723237 : \xa0 可攜系統 40723240 : \xa0 4輪車 40723243 : \xa0 4輪車 40723244 : \xa0 可攜系統 40723249 : \xa0 可攜系統 40732331 : \xa0 4輪車\xa0 \n W2直播中我分配的是亂數分組 \n 將班級名單網址貼到DartPad上執行即可亂數分組 \n DartPad : \n https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&gh_repo=cd2020&gh_path=downloads/dart_ex/even_grouping&theme=dark \n 設計二乙名單: \n https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0780 \n \n', 'tags': '', 'url': '40523253.html'}, {'title': 'week6~9', 'text': "week6 : \n week6直播紀錄 : \n \n 分工名單 : \n topic 0 翻譯 : 40723237 40723221 40723222 40723228 40723243 40723244 40723236 40623117 \n topic 1 翻譯 : 40723221 40723222 40623252 40523253 40723249 40732331 40723240 40723237 \n Assignment 2: \n Due April 22, 2020 for class 2a and April 23, 2020 for class 2b. \n \n \n According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot. \n \n \n What do you need to know from \xa0 https://cyberbotics.com/doc/guide/index \xa0 to implement a four-wheeled robot? \n \n \n 翻譯跟Assignment 2 放在cd2020/downloads下 \n \n \n week6課堂亂抽查報告 : \n \n week8 : \n 安裝這三個模組 \n pip install opencv-python \n pip install imutils \n pip install nump \n \n week8亂數抽查會議記錄 : \n \n 將leo更新至6.2.1版本以解決舊版的bug \n 卸載舊版leo \n pip uninstall \n 安裝6.2.1版leo \n pip install leo==6.2.1 \n \n \n week9 : \n 期中報告影片 (week1至今所有成果10分鐘影片報告) :\xa0 \n 雲端影片網址 (限制需要要有虎科大信箱才能觀看) : \n https://drive.google.com/file/d/1MCifVtJXgrAvC1EF82zbhwGSUwn30RFl/view \n \n", 'tags': '', 'url': 'week6~9.html'}, {'title': 'week10~14', 'text': 'week10 : \n Use Google + Domain API to setup login for @gm.nfu.edu.tw users \n 1. 登陸自己學校給的google帳號 \n 2. 連到 \xa0 https://console.developers.google.com/ \n 3. 接受許可並建立專案(專案自己取) \n 4. 啟用API和服務 \n 5. 點選 Google Domain API並啟用 \n 6. 點選 憑據>設定同意畫面 > User Type選內部 > 應用程式名稱自己取 > 按儲存 \n 7.\xa0 在“API和服務”下，進入“憑據”頁面 \n 8. 建立憑證 > 選OAuth 2.0 Client IDs > 選網路應用程式 \n 9. 將用戶端ID密碼儲存在tmp下 \n \n 10.\xa0授權JavaScript 來源 :\xa0 https://localhost:8443 \n \xa0 \xa0 \xa0 授權的重定向URI :\xa0 https://localhost:8443/login/google/ \n 11.\xa0 開啟leo更改config中的scrum為自己存在tmp的用戶端ID密碼檔案名稱 > 按save和darwROC \n 12. 執行 pip install authomatic \n 13.\xa0 開啟https://localhost:8443 並測試是否正常運作 \n \xa0 \n week10開會紀錄 : \n \n topic2 : \n coppeliasim\xa0:\xa0 40723221 \n MSModelingAndTFApproaches.pdf. 207頁 : 7人 40723249 40623117 40723221 40723228 40723236 40723237 40723243 \n MechatronicDesignCases.pdf. 46頁 : 2人 40723222 40723244 \n topic3 : \n MechaFutureAndChallenges.pdf. 38頁 : 2人 40623252 40523253 \n MechaEducFutureNeed.pdf. 20頁 : 1人 40723240 \n ubuntu-Vrep虛擬主機設置 \n 1. 下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器 \n https://www.virtualbox.org/wiki/Downloads \n 點 Windows hosts 下載 \n \n \n \n \n \n \n CoppeliaSim_4_Self_Driving_Car_Simulation.7z \n \n https://drive.google.com/file/d/1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl/view \n \n \n \n \n \n \n \xa0 Virtualbox appliance of Ubuntu 20.04 \n 2. 點 喜好設定在網路那新增 NAT 網路 \n 3.\xa0 匯入 ubuntu \n 4.\xa0 設定網路選僅限主機介面卡 \n 5.\xa0啟動 ubuntu \n 6. 輸入密碼 kmol2020 \n 7.\xa0點 activites ->\xa0 點 show application ->\xa0點 LX terminal \n 8.\xa0 輸入 xterm& ->\xa0 輸入ls顯示資料 \n 9. 同時按 ctrl+ 右鍵按著可以調整視窗的大小 \n 10.\xa0 輸入 cd coppeliasim4_rev4 進入該資料夾內 \n 11. 輸入ls顯示資料 -> 再輸入cd CoppeliaSim_Edu_V4_0_0_ubuntu18_04 \n 12.\xa0 輸入 ./coppeliaSim.sh 即可開啟Vrep虛擬主機 \n 影片教學 : \n \n \n \n week11 : \n week11開會直播影片紀錄 : \n \n \n \n', 'tags': '', 'url': 'week10~14.html'}, {'title': '40723237', 'text': '', 'tags': '', 'url': '40723237.html'}, {'title': 'week1-5', 'text': 'week2 \n 更新python3.8.2 \n 到\xa0 https://www.python.org/downloads/release/python-382/ https://www.python.org/downloads/release/python-382/ 下載\xa0 Windows x86-64 executable installer，載完後執行 python-3.8.2-amd64.exe \n \n 選擇 Modify \n \n 不要選擇 pip，並選擇 Next \n \n 接著選擇完你的下載目錄後就可以點選 Install 來安裝 \n \n \n 到自己原本可攜底下的 data 創一個 py383，並去剛剛下載對應的目錄，去複製 python 的檔案來 py383 貼上 \n 到 https://bootstrap.pypa.io/get-pip.py 頁面，滑鼠右鍵另存新檔到自己原本可攜底下 \n 到自己可攜底下的 wscite415 開啟\xa0Scite.exe 編輯器 ，把之前 start_mdecourse.bat 拖移進來並利用 Replace 來把原本的 py373 取代成 py383\xa0 \n \n \n 存檔後再重新開啟，讓系統重新讀取 \n 接著安裝 pip 和 cmsimde 所需模組 \n 先到\xa0 https://bootstrap.pypa.io/get-pip.py \xa0下載 get-pip.py，並用程式碼自動載入 \n \n \n 下面有網址可以下載已做好的cd2020 \n https://drive.google.com/file/d/1DIM8rOFdTgGUXP6ugSSueat7pbZOWCaN/view?usp=sharing \n 實際操作影片 \n \n week3 \n Assignment 1 \n creat the\xa0 portable Python programming system for Windows 10 64bit system \n 先在隨身碟底下創一個 CD2020 的資料夾，並在裡面創一個 data \n 接著在 data 底下創 6 個資料夾，分別叫 PortableGit msys2 python383 wscite237 tmp home \n PortableGit \n 到\xa0 https://git-scm.com/download/win \xa0下載\xa0 64-bit Git for Windows Portable 下載完後，安裝檔案到 CD2020/data/PortableGit\xa0 \n msys2 \n 到\xa0 https://www.msys2.org/ \xa0下載 msys2-x86_64-20190524.exe\xa0下載完後，安裝檔案到 CD2020/data/msys2 \n python383 \n 到\xa0 https://www.python.org/downloads/release/python-382/ \xa0下載 Windows x86-64 executable installer 下載完後，安裝並複製檔案到 CD2020/data/python383 \n wscite237 \n 到\xa0 https://www.scintilla.org/SciTEDownload.html \xa0下載\xa0full 64-bit download ，下載完後，解壓縮檔案到 CD2020/data/wscite237輯器執行的 Scite.exe 編，打開 Options 下的 Global Options File 其中的預設值 code.page=0 修改設定為 code.page=65001，將 load.on.activate=1 前面的井字號拿掉 \n home \n 把舊的 2019fall/data/home 裡面複製\xa0.gitconfig 並貼到新的 home 裡 \n tcc \n 到\xa0 https://github.com/TinyCC/tinycc \xa0接著到命令提示字元裡 git clone\xa0 https://github.com/TinyCC/tinycc.git \xa0tcc \n Jupyterlab \n 到命令提示字元裡使用 pip install jupyterlab==2.0.1 就會自動安裝進去 \n Fossil SCM \n 到\xa0 https://www.fossil-scm.org/home/doc/trunk/www/index.wiki \xa0下載 fossil scm\xa0 下載完後，解壓縮檔案到 CD2020/data \n Flutter \n 到\xa0 https://github.com/flutter/flutter \xa0 接著到命令提示字元裡 git clone\xa0https://github.com/flutter/flutter.git -b stable \n vscode \n 到\xa0 https://github.com/microsoft/vscode \xa0接著到命令提示字元裡 git clone\xa0https://github.com/microsoft/vscode.git\xa0\xa0vscode \n tmp \n git clone 自己的倉儲 \n 安裝 pip 和 cmsimde 所需模組 \n 先到\xa0 https://bootstrap.pypa.io/get-pip.py \xa0下載 get-pip.py，並用程式碼自動載入 \n \n 實際操作影片 \n \n week4 \n dart 轉 javascript \n 確認可攜系統有無 flutter 等等需要用到裡面 dart dks 的 dart2js \n 修改 SciTE cpp.properties \n # for Dart 1/7\nfile.patterns.dart=*.dart\n# for Dart 2/7\nfilter.dart=Dart(dart)|*.dart|\n# for Dart 3/7\n*filter.dart=$(filter.dart)\n# for Dart 4/7\nlexer.$(file.patterns.dart)=cpp\n# for Dart 5/7\n*language.dart=&Dart|dart||\n# for Dart 6/7\nkeywordclass.dart=\\\nabstract continue false new this \\\nas default  final   null throw \\\nassert deferred finally operator true \\\nasync do for    part try \\\nasync* dynamic get rethrow typedef \\\nawait else  if return var \\\nbreak enum  implements set void \\\ncase    export import static while \\\ncatch external in super with \\\nclass extends is    switch yield \\\nconst factory library sync* yield* \nkeywords.$(file.patterns.dart)=$(keywordclass.dart)\n# for Dart 7/7\ncommand.go.*.dart=dart.exe "$(FileNameExt)"\ncommand.compile.*.dart=dart2js -o $(FileName).js $(FileNameExt) \n 修完後的\xa0http://mde.tw/cp2019/downloads/Scite_cpp.properties_dart_added.7z， 解開壓縮後, 放入隨身系統\xa0data\\wscite415\\wscite 目錄中 \n 之後開啟編譯器，開啟檔案，開啟檔案，使用 tool 的 compile 就可以轉成 .js 檔 \n 實際影片 \n \n', 'tags': '', 'url': 'week1-5.html'}, {'title': 'week6-weeek14', 'text': 'Topic 0: From Digital\xa0to Industrial + Engineering Product Design Collaboration \n 1. DesignCollaborationProducts \xa0(中文) \n \n 2. IndustrialAndEngineeringProductDesignCollaboration \xa0 (中文) \n \n Topic 1: Mechanical Design Process \n 1. MechanicalDesignProcess \xa0 (中文) \n 安裝所需模組 \n pip install opencv-python\npip install imutils\npip install numpy \n \n assignment3 \n MSModelingAndTFApproaches(151-180)中文', 'tags': '', 'url': 'week6-weeek14.html'}, {'title': 'group3', 'text': '\n', 'tags': '', 'url': 'group3.html'}, {'title': '40723247', 'text': '', 'tags': '', 'url': '40723247.html'}, {'title': 'Assignment1-1', 'text': 'four-wheeled robot \n 從 \xa0 https://www.coppeliarobotics.com/helpFiles/index.html 龐大的資料中， 可以抓出幾個重點章節， BubbleRob tutorial 、 Line following BubbleRob tutorial 、 External controller tutorial 、 Simulation dialog 、 Simulation \n BubbleRob tutorial : \xa0 設計簡單的移動機器人 BubbleRob 時嘗試介紹很多 CoppeliaSim 功能。 \n Line following BubbleRob tutorial : \xa0 在本教程中，我們在擴展 BubbleRob 的 功能，以使他遵循基礎上的規則。 \n External controller tutorial : \xa0 研究在 CoppeliaSim 中，有好幾種方法可以控 制機器人或模擬 \n Simulation dialog & Simulation : 此教程主要在教如何設置 bubbleRob 機器 人，在上學期我們有實際操作過。 \n \n Portable system \n 將可攜系統中的 python3.7.3 更新至 python3.8.2 版本 \n step1 先在自己資料夾內新增一個 cd2020，然後在 cd2020 內新增一個資料 夾 data，在 data 內再新增 py382 及 wscite432、portablegit。 \n step2 進入 \xa0 ptrhon \xa0 官網 \n step3 到 \xa0 downloads \xa0 內點選 \xa0 Latest Python 3 Release - Python 3.8.2 \n step4 滑到最下面，找到 \xa0 Windows x86-64 executable installer \xa0下載 \n step5 開始下載，把 pip 選項取消，按 next 把檔案下載至資料夾 py382 \n step6 下載 SciTE 系統 \xa0 full 64-bit download ，下載完後解壓縮到 data 下的 wscite432 \n step7 建立 start.bat 及 stop.bat \n step8 下載 MSYS2 \xa0 msys2-x86_64-20190524.exe \xa0 到 data 下 \n step9 下載 \xa0 PortableGit 64-bit Git for Windows Portable \xa0 到 portablegit 下 \n step10 安裝 pip，到 \xa0 https://bootstrap.pypa.io/get-pip.py \xa0 頁面，另存新檔 到 data 下 \n step11 執行指令，將 python3.8.2 版本缺少的模組下載下來 python get-pip.py pip install flask bs4 lxml pelican markdown flask_cors leo \n', 'tags': '', 'url': 'Assignment1-1.html'}, {'title': 'Assignment2-1', 'text': 'topic0 \n \xa0Topic 0: From Digital to Industrial + Engineering Product Design Collaboration \n DigitalProductCollaboration.pdf \n 這篇是再說 通過設計協作創建更好的產品 ，討論如何協同設計與介紹一些協同的工具。 \n 裡面有提到一些 : \n FlGMA: \n 這是一個協作優先的共享工作區工具。 Figma非常適合在 其中有多個人設計文件的相同區域。您可以觀看隊友設計 或在同一設計上一起工作實時。 \n MARVEL : \n 雖然 Figma傾向於感覺更自由和靈活，但 Marvel允許更標 準化的形式 合作。這也使我們的客戶可以輕鬆地與我們合 作 。 \n Zeplin: \n 是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工 作。 \n Quip: \n 是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄 並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。 \n 合作的過程 : \n 階段 1 線框與集思廣益 階段 2：研究與 框架 階段 3：迭代和反饋 階段 4：客戶的反饋和發展 \n 最終結果 \n Press Play 的實時繪圖動畫是工作中設計協作的一個範 例。一隊跨學科專家一起解決更大的設計和開發挑戰含義。沒有設計協作，我們將找不到理想的交集用戶體驗，視覺和技術。設計協作需要解決建築中伴隨的複雜， 通過 關鍵問題 的產品和經驗。 利用多個團隊成員的專業知識跨學科的設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。借助正確的思維方式，工具和流程，進行設計協作使團隊能夠通過創造性思維和迭代來更深入。 \n Topic 1 \n Mechanical Design Process \n MechanicalDesignProcess.pdf . \n Ch1 成功的設計: \n 第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。 \n Ch2 構建設計: \n 第二章是在說設計產品的流程，設計都將僅從產品構思開始，將通過圖紙記錄設計，以便能夠以可重複的方式構建更多產品方式。 \n Ch3結構上的考慮: \n 以“堅實的基礎”為基礎，以便其餘設計可以以此為基礎。 本章將重點介紹 : \n 1.利用材料概念的強度提出結構解決方案 \n 2.定義考慮我們電子產品結構設計的通用流程 \n 3.看一些具體說明一般概念的示例 \n Ch4材料與工藝: \n 現在已經有了前面設計的結構基礎，將開始實踐本章的“回歸基礎”，然後遵循產品規格，但現在我們將回到成本考慮因素。 通過重新設計“檢驗標準”，我們將繼續設計更多“建築模塊” ，設計師可以使用確定其外殼零件的最佳材料和工藝。 選擇組成裝配體的各個零件的材料和過程，設計師還得考慮了產品的組裝和維修。 \n', 'tags': '', 'url': 'Assignment2-1.html'}, {'title': 'W10', 'text': 'gm用戶登陸設定 \n \n 先登入@gm帳號 \n 至網站\xa0 https://console.developers.google.com \n 許可google API \n OAuth同意畫面按下同意 \n 選擇內部用戶類型 \n 建立憑證 \n 在已授權的 JavaScript 來源，新增URL\xa0https://localhost 、 https://localhost:8443 \n 在已授權的重新導向 URI， 新增URL\xa0 https://localhost 、 https://localhost:8443/login/google/ \n 儲存帳號密碼到tmp內檔名改成自己的學號 \n git clone 老師的CD2020PJ1克隆下來到tmp內 \n 用LEO更改CD2020PJ1資料夾內的cd2020pj1.leo並儲存 \n 打開wsgi.py就會自動導入畫面即完成 \n \n 以下是我的練習影片 \n \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': 'WEEK11 \n \n 先下載事前資料 \n 匯入ubuntu \n 設定虛擬主機的網路埠號 \n 啟動ubuntu \n 輸入密碼kmol2020 \n 輸入xterm&開啟 \n 輸入ls查看內容 \n cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh \n 打開檔案sdc.ttt \n 將檔案中的car_model.py放入編譯器執行 \n 完成 \n \n \n \n', 'tags': '', 'url': 'W11.html'}, {'title': '40723205', 'text': '', 'tags': '', 'url': '40723205.html'}, {'title': 'week10', 'text': 'gm用戶登入設置 \n 操作步驟: \n 1.先git clone cd2020pj1倉儲。 \n 2.建立新專案。 \n 3.點選啟用API和服務，點選Google+ Domains API並點選管理。 \n 4. 點選憑證及設定同意畫面 。 \n 5.點選憑證建立OAuth用戶端ID。 \n 6.設定來源及URL \n 7.將ID及密碼複製到編輯器，存儲在tmp下。 \n 8.開啟leo，並打開cd2020pj1.leo。 \n 9.將路徑及名稱改為自己的。 \n 10.存儲，並點選ROC。 \n 11.輸入pip install authomatic。 \n 12. 進入pj1，打開wsgi.py，即完成。 \n', 'tags': '', 'url': 'week10.html'}, {'title': 'week11', 'text': 'ssh \n 設定以ssh代替輸入帳密 \n \n Ubuntu設定及API連線 \n 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器檔案。 2.打開vitualbox，匯入ubuntu。 3.設定虛擬主機，三個埠號(22、8443、19999)]。 4.設定完成後啟動ubuntu。 5.輸入密碼kmol2020，並開啟lxterminal。 6.輸入xterm&開啟，並使用ctrl+右鍵將視窗放大。 7.依照步驟打開coppeliasim，輸入ls查看內容。 8.cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh。 9.開啟後打開檔案sdc.ttt。 10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。 11.將檔案中的car_model.py放入編譯器中，並執行。 12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。 \n \xa0 \n', 'tags': '', 'url': 'week11.html'}, {'title': 'Assignment1-2', 'text': '\xa0Random grouping \n 請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ \n 1.去網站 \xa0 http://mde.tw/cd2020/content/Grouping.html \n 2.點 \xa0 Dart source code for random grouping \n 3.去HTML更改為我們班的路徑 \n 4.點Run即完成亂數分組. \n Portable system \n 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data \n 下新增資料夾py382及 wscite432、portablegit 。 \n 2.進入 Python 官網。 \n 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 \n 4. Windows x86-64 executable installer 下載。 \n 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 \n 6.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n 7.建立新的start.bat及stop.bat。 \n 8. 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 \n 9. 下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0 portablegit下。 \n 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 \n 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n four wheeled robot \n https://www.coppeliarobotics.com/helpFiles/index.html 資料中 \n BubbleRob tutorial : \xa0 設計移動的機器人 \xa0 。 \n Line following BubbleRob tutorial : \xa0 在本教程中， 調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。 \n External controller tutorial : \xa0 有好幾種方法可以控 制機器人或模擬。 \n', 'tags': '', 'url': 'Assignment1-2.html'}, {'title': 'Assignment2-2', 'text': 'Topic 0 \n FlGMA: 這是一個協作優先的共享工作區工具。 Figma非常適合在 其中有多個人設計文件的相同區域。您可以觀看隊友設計 或在同一設計上一起工作實時。 \n MARVEL :這是一個適合與客戶溝通的地方，客戶也可以通過這裡察看進度。 \n Zeplin:是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工 作。 \n Quip:是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄 並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。 \n 合作的過程 : \n 階段一:線框和自由討論 \n 階段二:如何設計產品和思考市場上的需求 \n 階段三:統整大家的方法，並確保達到客戶的標準 \n 階段四:客戶的反應和意見 \n 結論:協同真的很重要，它可以幫助我們更快完成目標也讓產品更加完善 。 \n Topic 1 \n Ch1 \xa0 成功的設計 \n 第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。 \n Ch2 \xa0 構建設計 \n 第二章是在說設計產品的流程，設計都將僅從產品構思開始。 \n Ch3 結構上的考量 \n 第三章主要講述產品的結構問題，主要分為材料強度、結構設計過程、需求分析、靜載荷、動態負載進而討論。 \n Ch4 材料與工藝 \n 第四章主要講述產品所需的最佳材料與工藝，產品若已經符合規格的要求，接著就必須考慮到設計的成本和材料進而去影響工藝。 \n \n', 'tags': '', 'url': 'Assignment2-2.html'}, {'title': '40723239', 'text': 'test \n', 'tags': '', 'url': '40723239.html'}, {'title': 'group4', 'text': '', 'tags': '', 'url': 'group4.html'}, {'title': '40623251', 'text': 'test \n', 'tags': '', 'url': '40623251.html'}, {'title': '40623115', 'text': 'test \n', 'tags': '', 'url': '40623115.html'}, {'title': '40623144', 'text': 'test \n', 'tags': '', 'url': '40623144.html'}]};
>>>>>>> 36907be6ce33abb0e8a527d6e8b57a24aeaa523e
