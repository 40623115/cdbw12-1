var tipuesearch = {"pages": [{'title': '分組人員', 'text': 'group:1 \n 40723213 40723215 40723246 ---- group:2 \n 40723240 40523253 40723237 ---- group:3 \n 40723247 40723205 40723239 ---- group:4 \n 40623251 40623115 40623144 \n', 'tags': '', 'url': '分組人員.html'}, {'title': 'group1', 'text': '', 'tags': '', 'url': 'group1.html'}, {'title': '40723213', 'text': '<<<<<<< HEAD \n test \n', 'tags': '', 'url': '40723213.html'}, {'title': '40723215', 'text': 'test \n', 'tags': '', 'url': '40723215.html'}, {'title': '40723246', 'text': 'test \n', 'tags': '', 'url': '40723246.html'}, {'title': 'group2', 'text': '', 'tags': '', 'url': 'group2.html'}, {'title': '40723240', 'text': '', 'tags': '', 'url': '40723240.html'}, {'title': '40523253', 'text': '', 'tags': '', 'url': '40523253.html'}, {'title': 'week1~5', 'text': 'week1 : \n 登入自己的github帳戶，並且創建"cd2020"的個人倉儲。 \n 用cmsimde建立網站 \n 步驟: \n \n week2 : \n 更新可攜系統下的python 3.7.3至python 3.8.2 \n 1.進入官網下載區 :\xa0 https://www.python.org/downloads/windows/ \n 2. 下載\xa0 Windows x86-64 executable installer \n \n 3.安裝pyehon 3.8.3 ，安裝時不勾選pip \n \n 4.安裝時到自己可攜的data 新增一個資料夾叫py383，安裝路徑選此處201906_fall\\data\\py383 \n \n 5. \xa0用Scite.exe \xa0 更改執行檔start_mdecourse.bat，將py373全部取代成py383 \n \n 6.執行python get-pip.py和python -m pip install flask flask-cors markdown lxml bs4 pelican leo \n week3 : \n Assignment 1: \n Due March 25, 2020 for class 2a and March 26, 2020 for class 2b. \n \n \n Describe how to do an efficient random grouping for this course or do the roll calling randomly? \n \n \n Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n \n \n What do you need to know from \xa0 http://www.coppeliarobotics.com/helpFiles/index.html \xa0 to implement a four-wheeled robot? \n \n \n \n 分工內容: \n 40523253 : \xa0 亂數分組程式 40623117 : \xa0 亂數分組程式 40623252 : \xa0 4輪車 40723221 (group leader) : \xa0 4輪車 40723222 : \xa0 4輪車 40723228 : \xa0 亂數分組程式 40723236 : \xa0 4輪車 40723237 : \xa0 可攜系統 40723240 : \xa0 4輪車 40723243 : \xa0 4輪車 40723244 : \xa0 可攜系統 40723249 : \xa0 可攜系統 40732331 : \xa0 4輪車\xa0 \n W2直播中我分配的是亂數分組 \n 將班級名單網址貼到DartPad上執行即可亂數分組 \n DartPad : \n https://dartpad.github.io/embed-html.html?gh_owner=mdecourse&gh_repo=cd2020&gh_path=downloads/dart_ex/even_grouping&theme=dark \n 設計二乙名單: \n https://s1.mde.nfu.edu.tw:7443/?semester=1082&courseno=0780 \n \n', 'tags': '', 'url': 'week1~5.html'}, {'title': 'week6~9', 'text': "week6 : \n week6直播紀錄 : \n \n 分工名單 : \n topic 0 翻譯 : 40723237 40723221 40723222 40723228 40723243 40723244 40723236 40623117 \n topic 1 翻譯 : 40723221 40723222 40623252 40523253 40723249 40732331 40723240 40723237 \n Assignment 2: \n Due April 22, 2020 for class 2a and April 23, 2020 for class 2b. \n \n \n According to the material of Topic 0 and Topic 1, can you describe specifically what the mechanical design team need to do for accomplishing Assignment 1's four wheeled robot. \n \n \n What do you need to know from \xa0 https://cyberbotics.com/doc/guide/index \xa0 to implement a four-wheeled robot? \n \n \n 翻譯跟Assignment 2 放在cd2020/downloads下 \n \n \n week6課堂亂抽查報告 : \n \n week8 : \n 安裝這三個模組 \n pip install opencv-python \n pip install imutils \n pip install nump \n \n week8亂數抽查會議記錄 : \n \n 將leo更新至6.2.1版本以解決舊版的bug \n 卸載舊版leo \n pip uninstall \n 安裝6.2.1版leo \n pip install leo==6.2.1 \n \n \n week9 : \n 期中報告影片 (week1至今所有成果10分鐘影片報告) :\xa0 \n 雲端影片網址 (限制需要要有虎科大信箱才能觀看) : \n https://drive.google.com/file/d/1MCifVtJXgrAvC1EF82zbhwGSUwn30RFl/view \n \n", 'tags': '', 'url': 'week6~9.html'}, {'title': 'week10~14', 'text': 'week10 : \n Use Google + Domain API to setup login for @gm.nfu.edu.tw users \n 1. 登陸自己學校給的google帳號 \n 2. 連到 \xa0 https://console.developers.google.com/ \n 3. 接受許可並建立專案(專案自己取) \n 4. 啟用API和服務 \n 5. 點選 Google Domain API並啟用 \n 6. 點選 憑據>設定同意畫面 > User Type選內部 > 應用程式名稱自己取 > 按儲存 \n 7.\xa0 在“API和服務”下，進入“憑據”頁面 \n 8. 建立憑證 > 選OAuth 2.0 Client IDs > 選網路應用程式 \n 9. 將用戶端ID密碼儲存在tmp下 \n \n 10.\xa0授權JavaScript 來源 :\xa0 https://localhost:8443 \n \xa0 \xa0 \xa0 授權的重定向URI :\xa0 https://localhost:8443/login/google/ \n 11.\xa0 開啟leo更改config中的scrum為自己存在tmp的用戶端ID密碼檔案名稱 > 按save和darwROC \n 12. 執行 pip install authomatic \n 13.\xa0 開啟https://localhost:8443 並測試是否正常運作 \n \xa0 \n week10開會紀錄 : \n \n topic2 : \n coppeliasim\xa0:\xa0 40723221 \n MSModelingAndTFApproaches.pdf. 207頁 : 7人 40723249 40623117 40723221 40723228 40723236 40723237 40723243 \n MechatronicDesignCases.pdf. 46頁 : 2人 40723222 40723244 \n topic3 : \n MechaFutureAndChallenges.pdf. 38頁 : 2人 40623252 40523253 \n MechaEducFutureNeed.pdf. 20頁 : 1人 40723240 \n ubuntu-Vrep虛擬主機設置 \n 1. 下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器 \n https://www.virtualbox.org/wiki/Downloads \n 點 Windows hosts 下載 \n \n \n \n \n \n \n CoppeliaSim_4_Self_Driving_Car_Simulation.7z \n \n https://drive.google.com/file/d/1KlnsgBFyp6OpCC_BlYH-jKL4uJixpoBl/view \n \n \n \n \n \n \n \xa0 Virtualbox appliance of Ubuntu 20.04 \n 2. 點 喜好設定在網路那新增 NAT 網路 \n 3.\xa0 匯入 ubuntu \n 4.\xa0 設定網路選僅限主機介面卡 \n 5.\xa0啟動 ubuntu \n 6. 輸入密碼 kmol2020 \n 7.\xa0點 activites ->\xa0 點 show application ->\xa0點 LX terminal \n 8.\xa0 輸入 xterm& ->\xa0 輸入ls顯示資料 \n 9. 同時按 ctrl+ 右鍵按著可以調整視窗的大小 \n 10.\xa0 輸入 cd coppeliasim4_rev4 進入該資料夾內 \n 11. 輸入ls顯示資料 -> 再輸入cd CoppeliaSim_Edu_V4_0_0_ubuntu18_04 \n 12.\xa0 輸入 ./coppeliaSim.sh 即可開啟Vrep虛擬主機 \n 影片教學 : \n \n \n \n week11 : \n week11開會直播影片紀錄 : \n \n \n \n', 'tags': '', 'url': 'week10~14.html'}, {'title': '40723237', 'text': '', 'tags': '', 'url': '40723237.html'}, {'title': 'group3', 'text': '>>>>>>> b7334c04e7bdb5dde97b441526ccd2d010dffece \n', 'tags': '', 'url': 'group3.html'}, {'title': '40723247', 'text': '', 'tags': '', 'url': '40723247.html'}, {'title': 'Assignment1', 'text': 'four-wheeled robot \n 從 \xa0 https://www.coppeliarobotics.com/helpFiles/index.html 龐大的資料中， 可以抓出幾個重點章節， BubbleRob tutorial 、 Line following BubbleRob tutorial 、 External controller tutorial 、 Simulation dialog 、 Simulation \n BubbleRob tutorial : \xa0 設計簡單的移動機器人 BubbleRob 時嘗試介紹很多 CoppeliaSim 功能。 \n Line following BubbleRob tutorial : \xa0 在本教程中，我們在擴展 BubbleRob 的 功能，以使他遵循基礎上的規則。 \n External controller tutorial : \xa0 研究在 CoppeliaSim 中，有好幾種方法可以控 制機器人或模擬 \n Simulation dialog & Simulation : 此教程主要在教如何設置 bubbleRob 機器 人，在上學期我們有實際操作過。 \n \n Portable system \n 將可攜系統中的 python3.7.3 更新至 python3.8.2 版本 \n step1 先在自己資料夾內新增一個 cd2020，然後在 cd2020 內新增一個資料 夾 data，在 data 內再新增 py382 及 wscite432、portablegit。 \n step2 進入 \xa0 ptrhon \xa0 官網 \n step3 到 \xa0 downloads \xa0 內點選 \xa0 Latest Python 3 Release - Python 3.8.2 \n step4 滑到最下面，找到 \xa0 Windows x86-64 executable installer \xa0下載 \n step5 開始下載，把 pip 選項取消，按 next 把檔案下載至資料夾 py382 \n step6 下載 SciTE 系統 \xa0 full 64-bit download ，下載完後解壓縮到 data 下的 wscite432 \n step7 建立 start.bat 及 stop.bat \n step8 下載 MSYS2 \xa0 msys2-x86_64-20190524.exe \xa0 到 data 下 \n step9 下載 \xa0 PortableGit 64-bit Git for Windows Portable \xa0 到 portablegit 下 \n step10 安裝 pip，到 \xa0 https://bootstrap.pypa.io/get-pip.py \xa0 頁面，另存新檔 到 data 下 \n step11 執行指令，將 python3.8.2 版本缺少的模組下載下來 python get-pip.py pip install flask bs4 lxml pelican markdown flask_cors leo \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Assignment2', 'text': 'topic0 \n \xa0Topic 0: From Digital to Industrial + Engineering Product Design Collaboration \n DigitalProductCollaboration.pdf \n 這篇是再說 通過設計協作創建更好的產品 ，討論如何協同設計與介紹一些協同的工具。 \n 裡面有提到一些 : \n FlGMA: \n 這是一個協作優先的共享工作區工具。 Figma非常適合在 其中有多個人設計文件的相同區域。您可以觀看隊友設計 或在同一設計上一起工作實時。 \n MARVEL : \n 雖然 Figma傾向於感覺更自由和靈活，但 Marvel允許更標 準化的形式 合作。這也使我們的客戶可以輕鬆地與我們合 作 。 \n Zeplin: \n 是一個有用的傳遞工具，可讓開發人員深入了解設計的細節。工 作。 \n Quip: \n 是集思廣益和產品 /過程文檔的絕佳平台。我們用它來記錄 並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對並組織團隊成員在工作時需要了解的所有背景和知識一個專案。對於集思廣益而不是視覺關注的新想法也很有用。於集思廣益而不是視覺關注的新想法也很有用。 \n 合作的過程 : \n 階段 1 線框與集思廣益 階段 2：研究與 框架 階段 3：迭代和反饋 階段 4：客戶的反饋和發展 \n 最終結果 \n Press Play 的實時繪圖動畫是工作中設計協作的一個範 例。一隊跨學科專家一起解決更大的設計和開發挑戰含義。沒有設計協作，我們將找不到理想的交集用戶體驗，視覺和技術。設計協作需要解決建築中伴隨的複雜， 通過 關鍵問題 的產品和經驗。 利用多個團隊成員的專業知識跨學科的設計協作可確保團隊從各個角度應對挑戰並尋求更好的解決方案。借助正確的思維方式，工具和流程，進行設計協作使團隊能夠通過創造性思維和迭代來更深入。 \n Topic 1 \n Mechanical Design Process \n MechanicalDesignProcess.pdf . \n Ch1 成功的設計: \n 第一章是在描述如何做出一個成功的設計，要進行設計前需要一個團隊，然後依照需要的東西決定隊伍的規模，然後依照產品的需求以及市場調查等等，去進行溝通與討論跟磨合。 \n Ch2 構建設計: \n 第二章是在說設計產品的流程，設計都將僅從產品構思開始，將通過圖紙記錄設計，以便能夠以可重複的方式構建更多產品方式。 \n Ch3結構上的考慮: \n 以“堅實的基礎”為基礎，以便其餘設計可以以此為基礎。 本章將重點介紹 : \n 1.利用材料概念的強度提出結構解決方案 \n 2.定義考慮我們電子產品結構設計的通用流程 \n 3.看一些具體說明一般概念的示例 \n Ch4材料與工藝: \n 現在已經有了前面設計的結構基礎，將開始實踐本章的“回歸基礎”，然後遵循產品規格，但現在我們將回到成本考慮因素。 通過重新設計“檢驗標準”，我們將繼續設計更多“建築模塊” ，設計師可以使用確定其外殼零件的最佳材料和工藝。 選擇組成裝配體的各個零件的材料和過程，設計師還得考慮了產品的組裝和維修。', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'W10', 'text': 'gm用戶登陸設定 \n \n 先登入@gm帳號 \n 至網站\xa0 https://console.developers.google.com \n 許可google API \n OAuth同意畫面按下同意 \n 選擇內部用戶類型 \n 建立憑證 \n 在已授權的 JavaScript 來源，新增URL\xa0https://localhost 、 https://localhost:8443 \n 在已授權的重新導向 URI， 新增URL\xa0 https://localhost 、 https://localhost:8443/login/google/ \n 儲存帳號密碼到tmp內檔名改成自己的學號 \n git clone 老師的CD2020PJ1克隆下來到tmp內 \n 用LEO更改CD2020PJ1資料夾內的cd2020pj1.leo並儲存 \n 打開wsgi.py就會自動導入畫面即完成 \n \n 以下是我的練習影片 \n \n', 'tags': '', 'url': 'W10.html'}, {'title': 'W11', 'text': 'WEEK11 \n \n 先下載事前資料 \n 匯入ubuntu \n 設定虛擬主機的網路埠號 \n 啟動ubuntu \n 輸入密碼kmol2020 \n 輸入xterm&開啟 \n 輸入ls查看內容 \n cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh \n 打開檔案sdc.ttt \n 將檔案中的car_model.py放入編譯器執行 \n 完成 \n \n \n \n', 'tags': '', 'url': 'W11.html'}, {'title': '40723205', 'text': '', 'tags': '', 'url': '40723205.html'}, {'title': 'week10', 'text': 'gm用戶登入設置 \n 操作步驟: \n 1.先git clone cd2020pj1倉儲。 \n 2.建立新專案。 \n 3.點選啟用API和服務，點選Google+ Domains API並點選管理。 \n 4. 點選憑證及設定同意畫面 。 \n 5.點選憑證建立OAuth用戶端ID。 \n 6.設定來源及URL \n 7.將ID及密碼複製到編輯器，存儲在tmp下。 \n 8.開啟leo，並打開cd2020pj1.leo。 \n 9.將路徑及名稱改為自己的。 \n 10.存儲，並點選ROC。 \n 11.輸入pip install authomatic。 \n 12. 進入pj1，打開wsgi.py，即完成。 \n', 'tags': '', 'url': 'week10.html'}, {'title': 'week11', 'text': 'ssh \n 設定以ssh代替輸入帳密 \n \n Ubuntu設定及API連線 \n 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器檔案。 2.打開vitualbox，匯入ubuntu。 3.設定虛擬主機，三個埠號(22、8443、19999)]。 4.設定完成後啟動ubuntu。 5.輸入密碼kmol2020，並開啟lxterminal。 6.輸入xterm&開啟，並使用ctrl+右鍵將視窗放大。 7.依照步驟打開coppeliasim，輸入ls查看內容。 8.cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh。 9.開啟後打開檔案sdc.ttt。 10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。 11.將檔案中的car_model.py放入編譯器中，並執行。 12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。 \n \xa0 \n \xa0 \n', 'tags': '', 'url': 'week11.html'}, {'title': '40723239', 'text': 'test \n', 'tags': '', 'url': '40723239.html'}, {'title': 'group4', 'text': '', 'tags': '', 'url': 'group4.html'}, {'title': '40623251', 'text': 'test \n', 'tags': '', 'url': '40623251.html'}, {'title': '40623115', 'text': 'test \n', 'tags': '', 'url': '40623115.html'}, {'title': '40623144', 'text': 'test \n', 'tags': '', 'url': '40623144.html'}]};